-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_LZW_dataflow_parent_loop_proc is
port (
    num_chunks : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_aximm0_AWVALID : OUT STD_LOGIC;
    m_axi_aximm0_AWREADY : IN STD_LOGIC;
    m_axi_aximm0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_aximm0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_aximm0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_aximm0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_aximm0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_aximm0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_aximm0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_aximm0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_aximm0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_aximm0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_WVALID : OUT STD_LOGIC;
    m_axi_aximm0_WREADY : IN STD_LOGIC;
    m_axi_aximm0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_aximm0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_aximm0_WLAST : OUT STD_LOGIC;
    m_axi_aximm0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_ARVALID : OUT STD_LOGIC;
    m_axi_aximm0_ARREADY : IN STD_LOGIC;
    m_axi_aximm0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_aximm0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_aximm0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_aximm0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_aximm0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_aximm0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_aximm0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_aximm0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_aximm0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_aximm0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_RVALID : IN STD_LOGIC;
    m_axi_aximm0_RREADY : OUT STD_LOGIC;
    m_axi_aximm0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_aximm0_RLAST : IN STD_LOGIC;
    m_axi_aximm0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_aximm0_BVALID : IN STD_LOGIC;
    m_axi_aximm0_BREADY : OUT STD_LOGIC;
    m_axi_aximm0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_aximm0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_aximm0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r : IN STD_LOGIC_VECTOR (63 downto 0);
    send_data : IN STD_LOGIC_VECTOR (63 downto 0);
    output_length : IN STD_LOGIC_VECTOR (63 downto 0);
    inStream_in_length_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    inStream_in_length_empty_n : IN STD_LOGIC;
    inStream_in_length_read : OUT STD_LOGIC;
    input_offset_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    input_offset_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_offset_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    output_offset_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input_r_ap_vld : IN STD_LOGIC;
    send_data_ap_vld : IN STD_LOGIC;
    output_length_ap_vld : IN STD_LOGIC;
    input_offset_constprop_i_ap_vld : IN STD_LOGIC;
    input_offset_constprop_o_ap_vld : OUT STD_LOGIC;
    output_offset_constprop_i_ap_vld : IN STD_LOGIC;
    output_offset_constprop_o_ap_vld : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of krnl_LZW_dataflow_parent_loop_proc is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WLAST : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_RREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_BREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_i_1 : STD_LOGIC_VECTOR (6 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_inStream_in_length_read : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_input_offset_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_output_offset_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_input_offset_constprop_o_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_output_offset_constprop_o_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_continue : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_start_full_n : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_346_2_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component krnl_LZW_dataflow_in_loop_VITIS_LOOP_346_2 IS
    port (
        m_axi_aximm0_AWVALID : OUT STD_LOGIC;
        m_axi_aximm0_AWREADY : IN STD_LOGIC;
        m_axi_aximm0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_aximm0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_aximm0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_aximm0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_aximm0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_aximm0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_aximm0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_aximm0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_aximm0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_aximm0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_WVALID : OUT STD_LOGIC;
        m_axi_aximm0_WREADY : IN STD_LOGIC;
        m_axi_aximm0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_aximm0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_aximm0_WLAST : OUT STD_LOGIC;
        m_axi_aximm0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_ARVALID : OUT STD_LOGIC;
        m_axi_aximm0_ARREADY : IN STD_LOGIC;
        m_axi_aximm0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_aximm0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_aximm0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_aximm0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_aximm0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_aximm0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_aximm0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_aximm0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_aximm0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_aximm0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_RVALID : IN STD_LOGIC;
        m_axi_aximm0_RREADY : OUT STD_LOGIC;
        m_axi_aximm0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_aximm0_RLAST : IN STD_LOGIC;
        m_axi_aximm0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_aximm0_BVALID : IN STD_LOGIC;
        m_axi_aximm0_BREADY : OUT STD_LOGIC;
        m_axi_aximm0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_aximm0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_aximm0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_r : IN STD_LOGIC_VECTOR (63 downto 0);
        send_data : IN STD_LOGIC_VECTOR (63 downto 0);
        i_1 : IN STD_LOGIC_VECTOR (6 downto 0);
        output_length : IN STD_LOGIC_VECTOR (63 downto 0);
        inStream_in_length_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        inStream_in_length_empty_n : IN STD_LOGIC;
        inStream_in_length_read : OUT STD_LOGIC;
        input_offset_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        input_offset_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_offset_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        output_offset_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_r_ap_vld : IN STD_LOGIC;
        send_data_ap_vld : IN STD_LOGIC;
        i_1_ap_vld : IN STD_LOGIC;
        output_length_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        input_offset_constprop_i_ap_vld : IN STD_LOGIC;
        input_offset_constprop_o_ap_vld : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        output_offset_constprop_i_ap_vld : IN STD_LOGIC;
        output_offset_constprop_o_ap_vld : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_VITIS_LOOP_346_2_U0 : component krnl_LZW_dataflow_in_loop_VITIS_LOOP_346_2
    port map (
        m_axi_aximm0_AWVALID => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWVALID,
        m_axi_aximm0_AWREADY => m_axi_aximm0_AWREADY,
        m_axi_aximm0_AWADDR => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWADDR,
        m_axi_aximm0_AWID => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWID,
        m_axi_aximm0_AWLEN => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWLEN,
        m_axi_aximm0_AWSIZE => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWSIZE,
        m_axi_aximm0_AWBURST => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWBURST,
        m_axi_aximm0_AWLOCK => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWLOCK,
        m_axi_aximm0_AWCACHE => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWCACHE,
        m_axi_aximm0_AWPROT => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWPROT,
        m_axi_aximm0_AWQOS => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWQOS,
        m_axi_aximm0_AWREGION => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWREGION,
        m_axi_aximm0_AWUSER => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWUSER,
        m_axi_aximm0_WVALID => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WVALID,
        m_axi_aximm0_WREADY => m_axi_aximm0_WREADY,
        m_axi_aximm0_WDATA => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WDATA,
        m_axi_aximm0_WSTRB => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WSTRB,
        m_axi_aximm0_WLAST => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WLAST,
        m_axi_aximm0_WID => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WID,
        m_axi_aximm0_WUSER => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WUSER,
        m_axi_aximm0_ARVALID => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARVALID,
        m_axi_aximm0_ARREADY => m_axi_aximm0_ARREADY,
        m_axi_aximm0_ARADDR => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARADDR,
        m_axi_aximm0_ARID => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARID,
        m_axi_aximm0_ARLEN => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARLEN,
        m_axi_aximm0_ARSIZE => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARSIZE,
        m_axi_aximm0_ARBURST => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARBURST,
        m_axi_aximm0_ARLOCK => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARLOCK,
        m_axi_aximm0_ARCACHE => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARCACHE,
        m_axi_aximm0_ARPROT => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARPROT,
        m_axi_aximm0_ARQOS => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARQOS,
        m_axi_aximm0_ARREGION => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARREGION,
        m_axi_aximm0_ARUSER => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARUSER,
        m_axi_aximm0_RVALID => m_axi_aximm0_RVALID,
        m_axi_aximm0_RREADY => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_RREADY,
        m_axi_aximm0_RDATA => m_axi_aximm0_RDATA,
        m_axi_aximm0_RLAST => m_axi_aximm0_RLAST,
        m_axi_aximm0_RID => m_axi_aximm0_RID,
        m_axi_aximm0_RUSER => m_axi_aximm0_RUSER,
        m_axi_aximm0_RRESP => m_axi_aximm0_RRESP,
        m_axi_aximm0_BVALID => m_axi_aximm0_BVALID,
        m_axi_aximm0_BREADY => dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_BREADY,
        m_axi_aximm0_BRESP => m_axi_aximm0_BRESP,
        m_axi_aximm0_BID => m_axi_aximm0_BID,
        m_axi_aximm0_BUSER => m_axi_aximm0_BUSER,
        input_r => input_r,
        send_data => send_data,
        i_1 => dataflow_in_loop_VITIS_LOOP_346_2_U0_i_1,
        output_length => output_length,
        inStream_in_length_dout => inStream_in_length_dout,
        inStream_in_length_empty_n => inStream_in_length_empty_n,
        inStream_in_length_read => dataflow_in_loop_VITIS_LOOP_346_2_U0_inStream_in_length_read,
        input_offset_constprop_i => input_offset_constprop_i,
        input_offset_constprop_o => dataflow_in_loop_VITIS_LOOP_346_2_U0_input_offset_constprop_o,
        output_offset_constprop_i => output_offset_constprop_i,
        output_offset_constprop_o => dataflow_in_loop_VITIS_LOOP_346_2_U0_output_offset_constprop_o,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_r_ap_vld => input_r_ap_vld,
        send_data_ap_vld => send_data_ap_vld,
        i_1_ap_vld => ap_const_logic_0,
        output_length_ap_vld => output_length_ap_vld,
        ap_start => dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_start,
        input_offset_constprop_i_ap_vld => input_offset_constprop_i_ap_vld,
        input_offset_constprop_o_ap_vld => dataflow_in_loop_VITIS_LOOP_346_2_U0_input_offset_constprop_o_ap_vld,
        ap_done => dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_done,
        output_offset_constprop_i_ap_vld => output_offset_constprop_i_ap_vld,
        output_offset_constprop_o_ap_vld => dataflow_in_loop_VITIS_LOOP_346_2_U0_output_offset_constprop_o_ap_vld,
        ap_ready => dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_ready,
        ap_idle => dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_idle,
        ap_continue => dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv8_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv8_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv8_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv8_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv8_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv8_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((loop_dataflow_output_count = ap_const_lv8_0) and (ap_start = ap_const_logic_0) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_continue <= ap_continue;
    ap_sync_done <= dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_done;
    ap_sync_ready <= dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_ready;
    bound_minus_1 <= std_logic_vector(unsigned(num_chunks) - unsigned(ap_const_lv8_1));

    dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_in_loop_VITIS_LOOP_346_2_U0_ap_start <= ap_start;
    dataflow_in_loop_VITIS_LOOP_346_2_U0_i_1 <= loop_dataflow_input_count(7 - 1 downto 0);
    dataflow_in_loop_VITIS_LOOP_346_2_U0_start_full_n <= ap_const_logic_1;
    dataflow_in_loop_VITIS_LOOP_346_2_U0_start_write <= ap_const_logic_0;
    inStream_in_length_read <= dataflow_in_loop_VITIS_LOOP_346_2_U0_inStream_in_length_read;
    input_offset_constprop_o <= dataflow_in_loop_VITIS_LOOP_346_2_U0_input_offset_constprop_o;
    input_offset_constprop_o_ap_vld <= dataflow_in_loop_VITIS_LOOP_346_2_U0_input_offset_constprop_o_ap_vld;
    m_axi_aximm0_ARADDR <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARADDR;
    m_axi_aximm0_ARBURST <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARBURST;
    m_axi_aximm0_ARCACHE <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARCACHE;
    m_axi_aximm0_ARID <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARID;
    m_axi_aximm0_ARLEN <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARLEN;
    m_axi_aximm0_ARLOCK <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARLOCK;
    m_axi_aximm0_ARPROT <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARPROT;
    m_axi_aximm0_ARQOS <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARQOS;
    m_axi_aximm0_ARREGION <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARREGION;
    m_axi_aximm0_ARSIZE <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARSIZE;
    m_axi_aximm0_ARUSER <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARUSER;
    m_axi_aximm0_ARVALID <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_ARVALID;
    m_axi_aximm0_AWADDR <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWADDR;
    m_axi_aximm0_AWBURST <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWBURST;
    m_axi_aximm0_AWCACHE <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWCACHE;
    m_axi_aximm0_AWID <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWID;
    m_axi_aximm0_AWLEN <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWLEN;
    m_axi_aximm0_AWLOCK <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWLOCK;
    m_axi_aximm0_AWPROT <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWPROT;
    m_axi_aximm0_AWQOS <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWQOS;
    m_axi_aximm0_AWREGION <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWREGION;
    m_axi_aximm0_AWSIZE <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWSIZE;
    m_axi_aximm0_AWUSER <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWUSER;
    m_axi_aximm0_AWVALID <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_AWVALID;
    m_axi_aximm0_BREADY <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_BREADY;
    m_axi_aximm0_RREADY <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_RREADY;
    m_axi_aximm0_WDATA <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WDATA;
    m_axi_aximm0_WID <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WID;
    m_axi_aximm0_WLAST <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WLAST;
    m_axi_aximm0_WSTRB <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WSTRB;
    m_axi_aximm0_WUSER <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WUSER;
    m_axi_aximm0_WVALID <= dataflow_in_loop_VITIS_LOOP_346_2_U0_m_axi_aximm0_WVALID;
    output_offset_constprop_o <= dataflow_in_loop_VITIS_LOOP_346_2_U0_output_offset_constprop_o;
    output_offset_constprop_o_ap_vld <= dataflow_in_loop_VITIS_LOOP_346_2_U0_output_offset_constprop_o_ap_vld;
end behav;
