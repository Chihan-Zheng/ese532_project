// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_LZW_dataflow_in_loop_VITIS_LOOP_346_2 (
        m_axi_aximm0_AWVALID,
        m_axi_aximm0_AWREADY,
        m_axi_aximm0_AWADDR,
        m_axi_aximm0_AWID,
        m_axi_aximm0_AWLEN,
        m_axi_aximm0_AWSIZE,
        m_axi_aximm0_AWBURST,
        m_axi_aximm0_AWLOCK,
        m_axi_aximm0_AWCACHE,
        m_axi_aximm0_AWPROT,
        m_axi_aximm0_AWQOS,
        m_axi_aximm0_AWREGION,
        m_axi_aximm0_AWUSER,
        m_axi_aximm0_WVALID,
        m_axi_aximm0_WREADY,
        m_axi_aximm0_WDATA,
        m_axi_aximm0_WSTRB,
        m_axi_aximm0_WLAST,
        m_axi_aximm0_WID,
        m_axi_aximm0_WUSER,
        m_axi_aximm0_ARVALID,
        m_axi_aximm0_ARREADY,
        m_axi_aximm0_ARADDR,
        m_axi_aximm0_ARID,
        m_axi_aximm0_ARLEN,
        m_axi_aximm0_ARSIZE,
        m_axi_aximm0_ARBURST,
        m_axi_aximm0_ARLOCK,
        m_axi_aximm0_ARCACHE,
        m_axi_aximm0_ARPROT,
        m_axi_aximm0_ARQOS,
        m_axi_aximm0_ARREGION,
        m_axi_aximm0_ARUSER,
        m_axi_aximm0_RVALID,
        m_axi_aximm0_RREADY,
        m_axi_aximm0_RDATA,
        m_axi_aximm0_RLAST,
        m_axi_aximm0_RID,
        m_axi_aximm0_RUSER,
        m_axi_aximm0_RRESP,
        m_axi_aximm0_BVALID,
        m_axi_aximm0_BREADY,
        m_axi_aximm0_BRESP,
        m_axi_aximm0_BID,
        m_axi_aximm0_BUSER,
        input_r,
        send_data,
        i_1,
        output_length,
        inStream_in_length_dout,
        inStream_in_length_empty_n,
        inStream_in_length_read,
        input_offset_constprop_i,
        input_offset_constprop_o,
        output_offset_constprop_i,
        output_offset_constprop_o,
        ap_clk,
        ap_rst,
        input_r_ap_vld,
        send_data_ap_vld,
        i_1_ap_vld,
        output_length_ap_vld,
        ap_start,
        input_offset_constprop_i_ap_vld,
        input_offset_constprop_o_ap_vld,
        ap_done,
        output_offset_constprop_i_ap_vld,
        output_offset_constprop_o_ap_vld,
        ap_ready,
        ap_idle,
        ap_continue
);


output   m_axi_aximm0_AWVALID;
input   m_axi_aximm0_AWREADY;
output  [63:0] m_axi_aximm0_AWADDR;
output  [0:0] m_axi_aximm0_AWID;
output  [31:0] m_axi_aximm0_AWLEN;
output  [2:0] m_axi_aximm0_AWSIZE;
output  [1:0] m_axi_aximm0_AWBURST;
output  [1:0] m_axi_aximm0_AWLOCK;
output  [3:0] m_axi_aximm0_AWCACHE;
output  [2:0] m_axi_aximm0_AWPROT;
output  [3:0] m_axi_aximm0_AWQOS;
output  [3:0] m_axi_aximm0_AWREGION;
output  [0:0] m_axi_aximm0_AWUSER;
output   m_axi_aximm0_WVALID;
input   m_axi_aximm0_WREADY;
output  [63:0] m_axi_aximm0_WDATA;
output  [7:0] m_axi_aximm0_WSTRB;
output   m_axi_aximm0_WLAST;
output  [0:0] m_axi_aximm0_WID;
output  [0:0] m_axi_aximm0_WUSER;
output   m_axi_aximm0_ARVALID;
input   m_axi_aximm0_ARREADY;
output  [63:0] m_axi_aximm0_ARADDR;
output  [0:0] m_axi_aximm0_ARID;
output  [31:0] m_axi_aximm0_ARLEN;
output  [2:0] m_axi_aximm0_ARSIZE;
output  [1:0] m_axi_aximm0_ARBURST;
output  [1:0] m_axi_aximm0_ARLOCK;
output  [3:0] m_axi_aximm0_ARCACHE;
output  [2:0] m_axi_aximm0_ARPROT;
output  [3:0] m_axi_aximm0_ARQOS;
output  [3:0] m_axi_aximm0_ARREGION;
output  [0:0] m_axi_aximm0_ARUSER;
input   m_axi_aximm0_RVALID;
output   m_axi_aximm0_RREADY;
input  [63:0] m_axi_aximm0_RDATA;
input   m_axi_aximm0_RLAST;
input  [0:0] m_axi_aximm0_RID;
input  [0:0] m_axi_aximm0_RUSER;
input  [1:0] m_axi_aximm0_RRESP;
input   m_axi_aximm0_BVALID;
output   m_axi_aximm0_BREADY;
input  [1:0] m_axi_aximm0_BRESP;
input  [0:0] m_axi_aximm0_BID;
input  [0:0] m_axi_aximm0_BUSER;
input  [63:0] input_r;
input  [63:0] send_data;
input  [6:0] i_1;
input  [63:0] output_length;
input  [15:0] inStream_in_length_dout;
input   inStream_in_length_empty_n;
output   inStream_in_length_read;
input  [31:0] input_offset_constprop_i;
output  [31:0] input_offset_constprop_o;
input  [31:0] output_offset_constprop_i;
output  [31:0] output_offset_constprop_o;
input   ap_clk;
input   ap_rst;
input   input_r_ap_vld;
input   send_data_ap_vld;
input   i_1_ap_vld;
input   output_length_ap_vld;
input   ap_start;
input   input_offset_constprop_i_ap_vld;
output   input_offset_constprop_o_ap_vld;
output   ap_done;
input   output_offset_constprop_i_ap_vld;
output   output_offset_constprop_o_ap_vld;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_start;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_done;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_continue;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_idle;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_start_out;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_start_write;
wire   [63:0] dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_input_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_input_out_write;
wire   [63:0] dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_send_data_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_send_data_out_write;
wire   [6:0] dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_i_1_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_i_1_out_write;
wire   [63:0] dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_output_length_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_output_length_out_write;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_start;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_done;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_continue;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_idle;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_ready;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_r_read;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_read;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_read;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_read;
wire   [63:0] dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_out_write;
wire   [63:0] dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_out_write;
wire   [6:0] dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_out_write;
wire   [63:0] dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_out_din;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_out_write;
wire    Block_entry_proc_proc_U0_ap_start;
wire    Block_entry_proc_proc_U0_ap_done;
wire    Block_entry_proc_proc_U0_ap_continue;
wire    Block_entry_proc_proc_U0_ap_idle;
wire    Block_entry_proc_proc_U0_ap_ready;
wire   [15:0] Block_entry_proc_proc_U0_empty;
wire    Block_entry_proc_proc_U0_empty_ap_vld;
wire    Block_entry_proc_proc_U0_inStream_in_length_read;
wire    read_input_U0_ap_start;
wire    read_input_U0_ap_done;
wire    read_input_U0_ap_continue;
wire    read_input_U0_ap_idle;
wire    read_input_U0_ap_ready;
wire    read_input_U0_start_out;
wire    read_input_U0_start_write;
wire    read_input_U0_m_axi_aximm0_AWVALID;
wire   [63:0] read_input_U0_m_axi_aximm0_AWADDR;
wire   [0:0] read_input_U0_m_axi_aximm0_AWID;
wire   [31:0] read_input_U0_m_axi_aximm0_AWLEN;
wire   [2:0] read_input_U0_m_axi_aximm0_AWSIZE;
wire   [1:0] read_input_U0_m_axi_aximm0_AWBURST;
wire   [1:0] read_input_U0_m_axi_aximm0_AWLOCK;
wire   [3:0] read_input_U0_m_axi_aximm0_AWCACHE;
wire   [2:0] read_input_U0_m_axi_aximm0_AWPROT;
wire   [3:0] read_input_U0_m_axi_aximm0_AWQOS;
wire   [3:0] read_input_U0_m_axi_aximm0_AWREGION;
wire   [0:0] read_input_U0_m_axi_aximm0_AWUSER;
wire    read_input_U0_m_axi_aximm0_WVALID;
wire   [63:0] read_input_U0_m_axi_aximm0_WDATA;
wire   [7:0] read_input_U0_m_axi_aximm0_WSTRB;
wire    read_input_U0_m_axi_aximm0_WLAST;
wire   [0:0] read_input_U0_m_axi_aximm0_WID;
wire   [0:0] read_input_U0_m_axi_aximm0_WUSER;
wire    read_input_U0_m_axi_aximm0_ARVALID;
wire   [63:0] read_input_U0_m_axi_aximm0_ARADDR;
wire   [0:0] read_input_U0_m_axi_aximm0_ARID;
wire   [31:0] read_input_U0_m_axi_aximm0_ARLEN;
wire   [2:0] read_input_U0_m_axi_aximm0_ARSIZE;
wire   [1:0] read_input_U0_m_axi_aximm0_ARBURST;
wire   [1:0] read_input_U0_m_axi_aximm0_ARLOCK;
wire   [3:0] read_input_U0_m_axi_aximm0_ARCACHE;
wire   [2:0] read_input_U0_m_axi_aximm0_ARPROT;
wire   [3:0] read_input_U0_m_axi_aximm0_ARQOS;
wire   [3:0] read_input_U0_m_axi_aximm0_ARREGION;
wire   [0:0] read_input_U0_m_axi_aximm0_ARUSER;
wire    read_input_U0_m_axi_aximm0_RREADY;
wire    read_input_U0_m_axi_aximm0_BREADY;
wire    read_input_U0_input_r_read;
wire   [31:0] read_input_U0_input_offset_constprop_o;
wire    read_input_U0_input_offset_constprop_o_ap_vld;
wire   [7:0] read_input_U0_inStream_in_din;
wire    read_input_U0_inStream_in_write;
wire    ap_sync_continue;
wire    compute_LZW_U0_ap_start;
wire    compute_LZW_U0_ap_done;
wire    compute_LZW_U0_ap_continue;
wire    compute_LZW_U0_ap_idle;
wire    compute_LZW_U0_ap_ready;
wire    compute_LZW_U0_inStream_in_read;
wire   [7:0] compute_LZW_U0_outStream_code_flg_din;
wire    compute_LZW_U0_outStream_code_flg_write;
wire   [12:0] compute_LZW_U0_outStream_code_din;
wire    compute_LZW_U0_outStream_code_write;
wire    write_result_U0_ap_start;
wire    write_result_U0_ap_done;
wire    write_result_U0_ap_continue;
wire    write_result_U0_ap_idle;
wire    write_result_U0_ap_ready;
wire    write_result_U0_m_axi_aximm0_AWVALID;
wire   [63:0] write_result_U0_m_axi_aximm0_AWADDR;
wire   [0:0] write_result_U0_m_axi_aximm0_AWID;
wire   [31:0] write_result_U0_m_axi_aximm0_AWLEN;
wire   [2:0] write_result_U0_m_axi_aximm0_AWSIZE;
wire   [1:0] write_result_U0_m_axi_aximm0_AWBURST;
wire   [1:0] write_result_U0_m_axi_aximm0_AWLOCK;
wire   [3:0] write_result_U0_m_axi_aximm0_AWCACHE;
wire   [2:0] write_result_U0_m_axi_aximm0_AWPROT;
wire   [3:0] write_result_U0_m_axi_aximm0_AWQOS;
wire   [3:0] write_result_U0_m_axi_aximm0_AWREGION;
wire   [0:0] write_result_U0_m_axi_aximm0_AWUSER;
wire    write_result_U0_m_axi_aximm0_WVALID;
wire   [63:0] write_result_U0_m_axi_aximm0_WDATA;
wire   [7:0] write_result_U0_m_axi_aximm0_WSTRB;
wire    write_result_U0_m_axi_aximm0_WLAST;
wire   [0:0] write_result_U0_m_axi_aximm0_WID;
wire   [0:0] write_result_U0_m_axi_aximm0_WUSER;
wire    write_result_U0_m_axi_aximm0_ARVALID;
wire   [63:0] write_result_U0_m_axi_aximm0_ARADDR;
wire   [0:0] write_result_U0_m_axi_aximm0_ARID;
wire   [31:0] write_result_U0_m_axi_aximm0_ARLEN;
wire   [2:0] write_result_U0_m_axi_aximm0_ARSIZE;
wire   [1:0] write_result_U0_m_axi_aximm0_ARBURST;
wire   [1:0] write_result_U0_m_axi_aximm0_ARLOCK;
wire   [3:0] write_result_U0_m_axi_aximm0_ARCACHE;
wire   [2:0] write_result_U0_m_axi_aximm0_ARPROT;
wire   [3:0] write_result_U0_m_axi_aximm0_ARQOS;
wire   [3:0] write_result_U0_m_axi_aximm0_ARREGION;
wire   [0:0] write_result_U0_m_axi_aximm0_ARUSER;
wire    write_result_U0_m_axi_aximm0_RREADY;
wire    write_result_U0_m_axi_aximm0_BREADY;
wire    write_result_U0_send_data_read;
wire    write_result_U0_i_1_read;
wire    write_result_U0_output_length_read;
wire    write_result_U0_outStream_code_flg_read;
wire    write_result_U0_outStream_code_read;
wire   [31:0] write_result_U0_output_offset_constprop_o;
wire    write_result_U0_output_offset_constprop_o_ap_vld;
wire    input_c1_full_n;
wire   [63:0] input_c1_dout;
wire    input_c1_empty_n;
wire    send_data_c2_full_n;
wire   [63:0] send_data_c2_dout;
wire    send_data_c2_empty_n;
wire    i_1_c3_full_n;
wire   [6:0] i_1_c3_dout;
wire    i_1_c3_empty_n;
wire    output_length_c4_full_n;
wire   [63:0] output_length_c4_dout;
wire    output_length_c4_empty_n;
wire    input_c_full_n;
wire   [63:0] input_c_dout;
wire    input_c_empty_n;
wire    send_data_c_full_n;
wire   [63:0] send_data_c_dout;
wire    send_data_c_empty_n;
wire    i_1_c_full_n;
wire   [6:0] i_1_c_dout;
wire    i_1_c_empty_n;
wire    output_length_c_full_n;
wire   [63:0] output_length_c_dout;
wire    output_length_c_empty_n;
wire    inStream_in_full_n;
wire   [7:0] inStream_in_dout;
wire    inStream_in_empty_n;
wire    outStream_code_flg_full_n;
wire   [7:0] outStream_code_flg_dout;
wire    outStream_code_flg_empty_n;
wire    outStream_code_full_n;
wire   [12:0] outStream_code_dout;
wire    outStream_code_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready;
wire    ap_sync_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready;
reg    ap_sync_reg_Block_entry_proc_proc_U0_ap_ready;
wire    ap_sync_Block_entry_proc_proc_U0_ap_ready;
reg    ap_sync_reg_read_input_U0_ap_ready;
wire    ap_sync_read_input_U0_ap_ready;
reg    ap_sync_reg_write_result_U0_ap_ready;
wire    ap_sync_write_result_U0_ap_ready;
wire   [0:0] start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_din;
wire    start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_full_n;
wire   [0:0] start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_dout;
wire    start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_empty_n;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_start_full_n;
wire    dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_start_write;
wire    Block_entry_proc_proc_U0_start_full_n;
wire    Block_entry_proc_proc_U0_start_write;
wire   [0:0] start_for_compute_LZW_U0_din;
wire    start_for_compute_LZW_U0_full_n;
wire   [0:0] start_for_compute_LZW_U0_dout;
wire    start_for_compute_LZW_U0_empty_n;
wire    compute_LZW_U0_start_full_n;
wire    compute_LZW_U0_start_write;
wire    write_result_U0_start_full_n;
wire    write_result_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_entry_proc_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_read_input_U0_ap_ready = 1'b0;
#0 ap_sync_reg_write_result_U0_ap_ready = 1'b0;
end

krnl_LZW_dataflow_in_loop_VITIS_LOOP_346_2_entry3 dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_start),
    .start_full_n(start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_full_n),
    .ap_done(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_done),
    .ap_continue(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_continue),
    .ap_idle(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_idle),
    .ap_ready(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready),
    .start_out(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_start_out),
    .start_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_start_write),
    .input_r(input_r),
    .send_data(send_data),
    .i_1(i_1),
    .output_length(output_length),
    .input_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_input_out_din),
    .input_out_full_n(input_c1_full_n),
    .input_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_input_out_write),
    .send_data_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_send_data_out_din),
    .send_data_out_full_n(send_data_c2_full_n),
    .send_data_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_send_data_out_write),
    .i_1_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_i_1_out_din),
    .i_1_out_full_n(i_1_c3_full_n),
    .i_1_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_i_1_out_write),
    .output_length_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_output_length_out_din),
    .output_length_out_full_n(output_length_c4_full_n),
    .output_length_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_output_length_out_write)
);

krnl_LZW_dataflow_in_loop_VITIS_LOOP_346_2_entry6 dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_start),
    .ap_done(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_done),
    .ap_continue(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_continue),
    .ap_idle(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_idle),
    .ap_ready(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_ready),
    .input_r_dout(input_c1_dout),
    .input_r_empty_n(input_c1_empty_n),
    .input_r_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_r_read),
    .send_data_dout(send_data_c2_dout),
    .send_data_empty_n(send_data_c2_empty_n),
    .send_data_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_read),
    .i_1_dout(i_1_c3_dout),
    .i_1_empty_n(i_1_c3_empty_n),
    .i_1_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_read),
    .output_length_dout(output_length_c4_dout),
    .output_length_empty_n(output_length_c4_empty_n),
    .output_length_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_read),
    .input_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_out_din),
    .input_out_full_n(input_c_full_n),
    .input_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_out_write),
    .send_data_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_out_din),
    .send_data_out_full_n(send_data_c_full_n),
    .send_data_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_out_write),
    .i_1_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_out_din),
    .i_1_out_full_n(i_1_c_full_n),
    .i_1_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_out_write),
    .output_length_out_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_out_din),
    .output_length_out_full_n(output_length_c_full_n),
    .output_length_out_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_out_write)
);

krnl_LZW_Block_entry_proc_proc Block_entry_proc_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Block_entry_proc_proc_U0_ap_start),
    .ap_done(Block_entry_proc_proc_U0_ap_done),
    .ap_continue(Block_entry_proc_proc_U0_ap_continue),
    .ap_idle(Block_entry_proc_proc_U0_ap_idle),
    .ap_ready(Block_entry_proc_proc_U0_ap_ready),
    .empty(Block_entry_proc_proc_U0_empty),
    .empty_ap_vld(Block_entry_proc_proc_U0_empty_ap_vld),
    .inStream_in_length_dout(inStream_in_length_dout),
    .inStream_in_length_empty_n(inStream_in_length_empty_n),
    .inStream_in_length_read(Block_entry_proc_proc_U0_inStream_in_length_read)
);

krnl_LZW_read_input read_input_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(read_input_U0_ap_start),
    .start_full_n(start_for_compute_LZW_U0_full_n),
    .ap_done(read_input_U0_ap_done),
    .ap_continue(read_input_U0_ap_continue),
    .ap_idle(read_input_U0_ap_idle),
    .ap_ready(read_input_U0_ap_ready),
    .start_out(read_input_U0_start_out),
    .start_write(read_input_U0_start_write),
    .m_axi_aximm0_AWVALID(read_input_U0_m_axi_aximm0_AWVALID),
    .m_axi_aximm0_AWREADY(1'b0),
    .m_axi_aximm0_AWADDR(read_input_U0_m_axi_aximm0_AWADDR),
    .m_axi_aximm0_AWID(read_input_U0_m_axi_aximm0_AWID),
    .m_axi_aximm0_AWLEN(read_input_U0_m_axi_aximm0_AWLEN),
    .m_axi_aximm0_AWSIZE(read_input_U0_m_axi_aximm0_AWSIZE),
    .m_axi_aximm0_AWBURST(read_input_U0_m_axi_aximm0_AWBURST),
    .m_axi_aximm0_AWLOCK(read_input_U0_m_axi_aximm0_AWLOCK),
    .m_axi_aximm0_AWCACHE(read_input_U0_m_axi_aximm0_AWCACHE),
    .m_axi_aximm0_AWPROT(read_input_U0_m_axi_aximm0_AWPROT),
    .m_axi_aximm0_AWQOS(read_input_U0_m_axi_aximm0_AWQOS),
    .m_axi_aximm0_AWREGION(read_input_U0_m_axi_aximm0_AWREGION),
    .m_axi_aximm0_AWUSER(read_input_U0_m_axi_aximm0_AWUSER),
    .m_axi_aximm0_WVALID(read_input_U0_m_axi_aximm0_WVALID),
    .m_axi_aximm0_WREADY(1'b0),
    .m_axi_aximm0_WDATA(read_input_U0_m_axi_aximm0_WDATA),
    .m_axi_aximm0_WSTRB(read_input_U0_m_axi_aximm0_WSTRB),
    .m_axi_aximm0_WLAST(read_input_U0_m_axi_aximm0_WLAST),
    .m_axi_aximm0_WID(read_input_U0_m_axi_aximm0_WID),
    .m_axi_aximm0_WUSER(read_input_U0_m_axi_aximm0_WUSER),
    .m_axi_aximm0_ARVALID(read_input_U0_m_axi_aximm0_ARVALID),
    .m_axi_aximm0_ARREADY(m_axi_aximm0_ARREADY),
    .m_axi_aximm0_ARADDR(read_input_U0_m_axi_aximm0_ARADDR),
    .m_axi_aximm0_ARID(read_input_U0_m_axi_aximm0_ARID),
    .m_axi_aximm0_ARLEN(read_input_U0_m_axi_aximm0_ARLEN),
    .m_axi_aximm0_ARSIZE(read_input_U0_m_axi_aximm0_ARSIZE),
    .m_axi_aximm0_ARBURST(read_input_U0_m_axi_aximm0_ARBURST),
    .m_axi_aximm0_ARLOCK(read_input_U0_m_axi_aximm0_ARLOCK),
    .m_axi_aximm0_ARCACHE(read_input_U0_m_axi_aximm0_ARCACHE),
    .m_axi_aximm0_ARPROT(read_input_U0_m_axi_aximm0_ARPROT),
    .m_axi_aximm0_ARQOS(read_input_U0_m_axi_aximm0_ARQOS),
    .m_axi_aximm0_ARREGION(read_input_U0_m_axi_aximm0_ARREGION),
    .m_axi_aximm0_ARUSER(read_input_U0_m_axi_aximm0_ARUSER),
    .m_axi_aximm0_RVALID(m_axi_aximm0_RVALID),
    .m_axi_aximm0_RREADY(read_input_U0_m_axi_aximm0_RREADY),
    .m_axi_aximm0_RDATA(m_axi_aximm0_RDATA),
    .m_axi_aximm0_RLAST(m_axi_aximm0_RLAST),
    .m_axi_aximm0_RID(m_axi_aximm0_RID),
    .m_axi_aximm0_RUSER(m_axi_aximm0_RUSER),
    .m_axi_aximm0_RRESP(m_axi_aximm0_RRESP),
    .m_axi_aximm0_BVALID(1'b0),
    .m_axi_aximm0_BREADY(read_input_U0_m_axi_aximm0_BREADY),
    .m_axi_aximm0_BRESP(2'd0),
    .m_axi_aximm0_BID(1'd0),
    .m_axi_aximm0_BUSER(1'd0),
    .input_r_dout(input_c_dout),
    .input_r_empty_n(input_c_empty_n),
    .input_r_read(read_input_U0_input_r_read),
    .empty(16'd0),
    .input_offset_constprop_i(input_offset_constprop_i),
    .input_offset_constprop_o(read_input_U0_input_offset_constprop_o),
    .input_offset_constprop_o_ap_vld(read_input_U0_input_offset_constprop_o_ap_vld),
    .inStream_in_din(read_input_U0_inStream_in_din),
    .inStream_in_full_n(inStream_in_full_n),
    .inStream_in_write(read_input_U0_inStream_in_write)
);

krnl_LZW_compute_LZW compute_LZW_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(compute_LZW_U0_ap_start),
    .ap_done(compute_LZW_U0_ap_done),
    .ap_continue(compute_LZW_U0_ap_continue),
    .ap_idle(compute_LZW_U0_ap_idle),
    .ap_ready(compute_LZW_U0_ap_ready),
    .empty(16'd0),
    .inStream_in_dout(inStream_in_dout),
    .inStream_in_empty_n(inStream_in_empty_n),
    .inStream_in_read(compute_LZW_U0_inStream_in_read),
    .outStream_code_flg_din(compute_LZW_U0_outStream_code_flg_din),
    .outStream_code_flg_full_n(outStream_code_flg_full_n),
    .outStream_code_flg_write(compute_LZW_U0_outStream_code_flg_write),
    .outStream_code_din(compute_LZW_U0_outStream_code_din),
    .outStream_code_full_n(outStream_code_full_n),
    .outStream_code_write(compute_LZW_U0_outStream_code_write)
);

krnl_LZW_write_result write_result_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(write_result_U0_ap_start),
    .ap_done(write_result_U0_ap_done),
    .ap_continue(write_result_U0_ap_continue),
    .ap_idle(write_result_U0_ap_idle),
    .ap_ready(write_result_U0_ap_ready),
    .m_axi_aximm0_AWVALID(write_result_U0_m_axi_aximm0_AWVALID),
    .m_axi_aximm0_AWREADY(m_axi_aximm0_AWREADY),
    .m_axi_aximm0_AWADDR(write_result_U0_m_axi_aximm0_AWADDR),
    .m_axi_aximm0_AWID(write_result_U0_m_axi_aximm0_AWID),
    .m_axi_aximm0_AWLEN(write_result_U0_m_axi_aximm0_AWLEN),
    .m_axi_aximm0_AWSIZE(write_result_U0_m_axi_aximm0_AWSIZE),
    .m_axi_aximm0_AWBURST(write_result_U0_m_axi_aximm0_AWBURST),
    .m_axi_aximm0_AWLOCK(write_result_U0_m_axi_aximm0_AWLOCK),
    .m_axi_aximm0_AWCACHE(write_result_U0_m_axi_aximm0_AWCACHE),
    .m_axi_aximm0_AWPROT(write_result_U0_m_axi_aximm0_AWPROT),
    .m_axi_aximm0_AWQOS(write_result_U0_m_axi_aximm0_AWQOS),
    .m_axi_aximm0_AWREGION(write_result_U0_m_axi_aximm0_AWREGION),
    .m_axi_aximm0_AWUSER(write_result_U0_m_axi_aximm0_AWUSER),
    .m_axi_aximm0_WVALID(write_result_U0_m_axi_aximm0_WVALID),
    .m_axi_aximm0_WREADY(m_axi_aximm0_WREADY),
    .m_axi_aximm0_WDATA(write_result_U0_m_axi_aximm0_WDATA),
    .m_axi_aximm0_WSTRB(write_result_U0_m_axi_aximm0_WSTRB),
    .m_axi_aximm0_WLAST(write_result_U0_m_axi_aximm0_WLAST),
    .m_axi_aximm0_WID(write_result_U0_m_axi_aximm0_WID),
    .m_axi_aximm0_WUSER(write_result_U0_m_axi_aximm0_WUSER),
    .m_axi_aximm0_ARVALID(write_result_U0_m_axi_aximm0_ARVALID),
    .m_axi_aximm0_ARREADY(1'b0),
    .m_axi_aximm0_ARADDR(write_result_U0_m_axi_aximm0_ARADDR),
    .m_axi_aximm0_ARID(write_result_U0_m_axi_aximm0_ARID),
    .m_axi_aximm0_ARLEN(write_result_U0_m_axi_aximm0_ARLEN),
    .m_axi_aximm0_ARSIZE(write_result_U0_m_axi_aximm0_ARSIZE),
    .m_axi_aximm0_ARBURST(write_result_U0_m_axi_aximm0_ARBURST),
    .m_axi_aximm0_ARLOCK(write_result_U0_m_axi_aximm0_ARLOCK),
    .m_axi_aximm0_ARCACHE(write_result_U0_m_axi_aximm0_ARCACHE),
    .m_axi_aximm0_ARPROT(write_result_U0_m_axi_aximm0_ARPROT),
    .m_axi_aximm0_ARQOS(write_result_U0_m_axi_aximm0_ARQOS),
    .m_axi_aximm0_ARREGION(write_result_U0_m_axi_aximm0_ARREGION),
    .m_axi_aximm0_ARUSER(write_result_U0_m_axi_aximm0_ARUSER),
    .m_axi_aximm0_RVALID(1'b0),
    .m_axi_aximm0_RREADY(write_result_U0_m_axi_aximm0_RREADY),
    .m_axi_aximm0_RDATA(64'd0),
    .m_axi_aximm0_RLAST(1'b0),
    .m_axi_aximm0_RID(1'd0),
    .m_axi_aximm0_RUSER(1'd0),
    .m_axi_aximm0_RRESP(2'd0),
    .m_axi_aximm0_BVALID(m_axi_aximm0_BVALID),
    .m_axi_aximm0_BREADY(write_result_U0_m_axi_aximm0_BREADY),
    .m_axi_aximm0_BRESP(m_axi_aximm0_BRESP),
    .m_axi_aximm0_BID(m_axi_aximm0_BID),
    .m_axi_aximm0_BUSER(m_axi_aximm0_BUSER),
    .empty(16'd0),
    .send_data_dout(send_data_c_dout),
    .send_data_empty_n(send_data_c_empty_n),
    .send_data_read(write_result_U0_send_data_read),
    .i_1_dout(i_1_c_dout),
    .i_1_empty_n(i_1_c_empty_n),
    .i_1_read(write_result_U0_i_1_read),
    .output_length_dout(output_length_c_dout),
    .output_length_empty_n(output_length_c_empty_n),
    .output_length_read(write_result_U0_output_length_read),
    .outStream_code_flg_dout(outStream_code_flg_dout),
    .outStream_code_flg_empty_n(outStream_code_flg_empty_n),
    .outStream_code_flg_read(write_result_U0_outStream_code_flg_read),
    .outStream_code_dout(outStream_code_dout),
    .outStream_code_empty_n(outStream_code_empty_n),
    .outStream_code_read(write_result_U0_outStream_code_read),
    .output_offset_constprop_i(output_offset_constprop_i),
    .output_offset_constprop_o(write_result_U0_output_offset_constprop_o),
    .output_offset_constprop_o_ap_vld(write_result_U0_output_offset_constprop_o_ap_vld)
);

krnl_LZW_fifo_w64_d2_S input_c1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_input_out_din),
    .if_full_n(input_c1_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_input_out_write),
    .if_dout(input_c1_dout),
    .if_empty_n(input_c1_empty_n),
    .if_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_r_read)
);

krnl_LZW_fifo_w64_d2_S send_data_c2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_send_data_out_din),
    .if_full_n(send_data_c2_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_send_data_out_write),
    .if_dout(send_data_c2_dout),
    .if_empty_n(send_data_c2_empty_n),
    .if_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_read)
);

krnl_LZW_fifo_w7_d2_S i_1_c3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_i_1_out_din),
    .if_full_n(i_1_c3_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_i_1_out_write),
    .if_dout(i_1_c3_dout),
    .if_empty_n(i_1_c3_empty_n),
    .if_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_read)
);

krnl_LZW_fifo_w64_d2_S output_length_c4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_output_length_out_din),
    .if_full_n(output_length_c4_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_output_length_out_write),
    .if_dout(output_length_c4_dout),
    .if_empty_n(output_length_c4_empty_n),
    .if_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_read)
);

krnl_LZW_fifo_w64_d2_S input_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_out_din),
    .if_full_n(input_c_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_input_out_write),
    .if_dout(input_c_dout),
    .if_empty_n(input_c_empty_n),
    .if_read(read_input_U0_input_r_read)
);

krnl_LZW_fifo_w64_d4_S send_data_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_out_din),
    .if_full_n(send_data_c_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_send_data_out_write),
    .if_dout(send_data_c_dout),
    .if_empty_n(send_data_c_empty_n),
    .if_read(write_result_U0_send_data_read)
);

krnl_LZW_fifo_w7_d4_S i_1_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_out_din),
    .if_full_n(i_1_c_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_i_1_out_write),
    .if_dout(i_1_c_dout),
    .if_empty_n(i_1_c_empty_n),
    .if_read(write_result_U0_i_1_read)
);

krnl_LZW_fifo_w64_d4_S output_length_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_out_din),
    .if_full_n(output_length_c_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_output_length_out_write),
    .if_dout(output_length_c_dout),
    .if_empty_n(output_length_c_empty_n),
    .if_read(write_result_U0_output_length_read)
);

krnl_LZW_fifo_w8_d2_S inStream_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_input_U0_inStream_in_din),
    .if_full_n(inStream_in_full_n),
    .if_write(read_input_U0_inStream_in_write),
    .if_dout(inStream_in_dout),
    .if_empty_n(inStream_in_empty_n),
    .if_read(compute_LZW_U0_inStream_in_read)
);

krnl_LZW_fifo_w8_d4_S outStream_code_flg_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_LZW_U0_outStream_code_flg_din),
    .if_full_n(outStream_code_flg_full_n),
    .if_write(compute_LZW_U0_outStream_code_flg_write),
    .if_dout(outStream_code_flg_dout),
    .if_empty_n(outStream_code_flg_empty_n),
    .if_read(write_result_U0_outStream_code_flg_read)
);

krnl_LZW_fifo_w13_d4_S outStream_code_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_LZW_U0_outStream_code_din),
    .if_full_n(outStream_code_full_n),
    .if_write(compute_LZW_U0_outStream_code_write),
    .if_dout(outStream_code_dout),
    .if_empty_n(outStream_code_empty_n),
    .if_read(write_result_U0_outStream_code_read)
);

krnl_LZW_start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0 start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_din),
    .if_full_n(start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_full_n),
    .if_write(dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_start_write),
    .if_dout(start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_dout),
    .if_empty_n(start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_empty_n),
    .if_read(dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_ready)
);

krnl_LZW_start_for_compute_LZW_U0 start_for_compute_LZW_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compute_LZW_U0_din),
    .if_full_n(start_for_compute_LZW_U0_full_n),
    .if_write(read_input_U0_start_write),
    .if_dout(start_for_compute_LZW_U0_dout),
    .if_empty_n(start_for_compute_LZW_U0_empty_n),
    .if_read(compute_LZW_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Block_entry_proc_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_entry_proc_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_entry_proc_proc_U0_ap_ready <= ap_sync_Block_entry_proc_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready <= ap_sync_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_input_U0_ap_ready <= ap_sync_read_input_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_write_result_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_write_result_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_write_result_U0_ap_ready <= ap_sync_write_result_U0_ap_ready;
        end
    end
end

assign Block_entry_proc_proc_U0_ap_continue = 1'b1;

assign Block_entry_proc_proc_U0_ap_start = ((ap_sync_reg_Block_entry_proc_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_entry_proc_proc_U0_start_full_n = 1'b1;

assign Block_entry_proc_proc_U0_start_write = 1'b0;

assign ap_done = ap_sync_done;

assign ap_idle = (write_result_U0_ap_idle & read_input_U0_ap_idle & dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_idle & dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_idle & compute_LZW_U0_ap_idle & Block_entry_proc_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_Block_entry_proc_proc_U0_ap_ready = (ap_sync_reg_Block_entry_proc_proc_U0_ap_ready | Block_entry_proc_proc_U0_ap_ready);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready = (dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready | ap_sync_reg_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready);

assign ap_sync_done = (write_result_U0_ap_done & read_input_U0_ap_done);

assign ap_sync_read_input_U0_ap_ready = (read_input_U0_ap_ready | ap_sync_reg_read_input_U0_ap_ready);

assign ap_sync_ready = (ap_sync_write_result_U0_ap_ready & ap_sync_read_input_U0_ap_ready & ap_sync_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready & ap_sync_Block_entry_proc_proc_U0_ap_ready);

assign ap_sync_write_result_U0_ap_ready = (write_result_U0_ap_ready | ap_sync_reg_write_result_U0_ap_ready);

assign compute_LZW_U0_ap_continue = 1'b1;

assign compute_LZW_U0_ap_start = start_for_compute_LZW_U0_empty_n;

assign compute_LZW_U0_start_full_n = 1'b1;

assign compute_LZW_U0_start_write = 1'b0;

assign dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_continue = 1'b1;

assign dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_start = ((ap_sync_reg_dataflow_in_loop_VITIS_LOOP_346_2_entry3_U0_ap_ready ^ 1'b1) & ap_start);

assign dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_continue = 1'b1;

assign dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_ap_start = start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_empty_n;

assign dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_start_full_n = 1'b1;

assign dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_start_write = 1'b0;

assign inStream_in_length_read = Block_entry_proc_proc_U0_inStream_in_length_read;

assign input_offset_constprop_o = read_input_U0_input_offset_constprop_o;

assign input_offset_constprop_o_ap_vld = read_input_U0_input_offset_constprop_o_ap_vld;

assign m_axi_aximm0_ARADDR = read_input_U0_m_axi_aximm0_ARADDR;

assign m_axi_aximm0_ARBURST = read_input_U0_m_axi_aximm0_ARBURST;

assign m_axi_aximm0_ARCACHE = read_input_U0_m_axi_aximm0_ARCACHE;

assign m_axi_aximm0_ARID = read_input_U0_m_axi_aximm0_ARID;

assign m_axi_aximm0_ARLEN = read_input_U0_m_axi_aximm0_ARLEN;

assign m_axi_aximm0_ARLOCK = read_input_U0_m_axi_aximm0_ARLOCK;

assign m_axi_aximm0_ARPROT = read_input_U0_m_axi_aximm0_ARPROT;

assign m_axi_aximm0_ARQOS = read_input_U0_m_axi_aximm0_ARQOS;

assign m_axi_aximm0_ARREGION = read_input_U0_m_axi_aximm0_ARREGION;

assign m_axi_aximm0_ARSIZE = read_input_U0_m_axi_aximm0_ARSIZE;

assign m_axi_aximm0_ARUSER = read_input_U0_m_axi_aximm0_ARUSER;

assign m_axi_aximm0_ARVALID = read_input_U0_m_axi_aximm0_ARVALID;

assign m_axi_aximm0_AWADDR = write_result_U0_m_axi_aximm0_AWADDR;

assign m_axi_aximm0_AWBURST = write_result_U0_m_axi_aximm0_AWBURST;

assign m_axi_aximm0_AWCACHE = write_result_U0_m_axi_aximm0_AWCACHE;

assign m_axi_aximm0_AWID = write_result_U0_m_axi_aximm0_AWID;

assign m_axi_aximm0_AWLEN = write_result_U0_m_axi_aximm0_AWLEN;

assign m_axi_aximm0_AWLOCK = write_result_U0_m_axi_aximm0_AWLOCK;

assign m_axi_aximm0_AWPROT = write_result_U0_m_axi_aximm0_AWPROT;

assign m_axi_aximm0_AWQOS = write_result_U0_m_axi_aximm0_AWQOS;

assign m_axi_aximm0_AWREGION = write_result_U0_m_axi_aximm0_AWREGION;

assign m_axi_aximm0_AWSIZE = write_result_U0_m_axi_aximm0_AWSIZE;

assign m_axi_aximm0_AWUSER = write_result_U0_m_axi_aximm0_AWUSER;

assign m_axi_aximm0_AWVALID = write_result_U0_m_axi_aximm0_AWVALID;

assign m_axi_aximm0_BREADY = write_result_U0_m_axi_aximm0_BREADY;

assign m_axi_aximm0_RREADY = read_input_U0_m_axi_aximm0_RREADY;

assign m_axi_aximm0_WDATA = write_result_U0_m_axi_aximm0_WDATA;

assign m_axi_aximm0_WID = write_result_U0_m_axi_aximm0_WID;

assign m_axi_aximm0_WLAST = write_result_U0_m_axi_aximm0_WLAST;

assign m_axi_aximm0_WSTRB = write_result_U0_m_axi_aximm0_WSTRB;

assign m_axi_aximm0_WUSER = write_result_U0_m_axi_aximm0_WUSER;

assign m_axi_aximm0_WVALID = write_result_U0_m_axi_aximm0_WVALID;

assign output_offset_constprop_o = write_result_U0_output_offset_constprop_o;

assign output_offset_constprop_o_ap_vld = write_result_U0_output_offset_constprop_o_ap_vld;

assign read_input_U0_ap_continue = ap_sync_continue;

assign read_input_U0_ap_start = ((ap_sync_reg_read_input_U0_ap_ready ^ 1'b1) & ap_start);

assign start_for_compute_LZW_U0_din = 1'b1;

assign start_for_dataflow_in_loop_VITIS_LOOP_346_2_entry6_U0_din = 1'b1;

assign write_result_U0_ap_continue = ap_sync_continue;

assign write_result_U0_ap_start = ((ap_sync_reg_write_result_U0_ap_ready ^ 1'b1) & ap_start);

assign write_result_U0_start_full_n = 1'b1;

assign write_result_U0_start_write = 1'b0;

endmodule //krnl_LZW_dataflow_in_loop_VITIS_LOOP_346_2
