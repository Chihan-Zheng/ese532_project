<profile>

<section name = "Vitis HLS Report for 'krnl_LZW'" level="0">
<item name = "Date">Fri Dec  1 23:01:25 2023
</item>
<item name = "Version">2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)</item>
<item name = "Project">LZW_HW</item>
<item name = "Solution">solution1 (Vitis Kernel Flow Target)</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu3eg-sbva484-1-i</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">6.67 ns, 4.867 ns, 1.80 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">33058, 1269894, 0.220 ms, 8.466 ms, 32915, 1269751, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="compute_LZW_U0">compute_LZW, 32914, 1269750, 0.219 ms, 8.465 ms, 32914, 1269750, none</column>
<column name="Block_split1_proc5_U0">Block_split1_proc5, 71, 71, 0.473 us, 0.473 us, 71, 71, none</column>
<column name="read_input_U0">read_input, 1, 65608, 6.667 ns, 0.437 ms, 1, 65608, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 12, -</column>
<column name="FIFO">-, -, 594, 402, -</column>
<column name="Instance">76, -, 79447, 25514, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 18, -</column>
<column name="Register">-, -, 5, -, -</column>
<specialColumn name="Available">432, 360, 141120, 70560, 0</specialColumn>
<specialColumn name="Utilization (%)">17, 0, 56, 36, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="Block_split1_proc5_U0">Block_split1_proc5, 0, 0, 87, 453, 0</column>
<column name="aximm1_m_axi_U">aximm1_m_axi, 2, 0, 548, 700, 0</column>
<column name="aximm2_m_axi_U">aximm2_m_axi, 2, 0, 537, 677, 0</column>
<column name="aximm3_m_axi_U">aximm3_m_axi, 2, 0, 512, 580, 0</column>
<column name="aximm4_m_axi_U">aximm4_m_axi, 2, 0, 537, 677, 0</column>
<column name="compute_LZW_U0">compute_LZW, 68, 0, 76733, 21340, 0</column>
<column name="control_s_axi_U">control_s_axi, 0, 0, 316, 552, 0</column>
<column name="read_input_U0">read_input, 0, 0, 177, 535, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
<column name="inStream_in_U">0, 99, 0, -, 2, 8, 16</column>
<column name="in_c_U">0, 99, 0, -, 2, 64, 128</column>
<column name="in_len_V_loc_c7_U">0, 99, 0, -, 2, 13, 26</column>
<column name="in_len_V_loc_c_U">0, 99, 0, -, 2, 13, 26</column>
<column name="output_length_c_U">0, 99, 0, -, 3, 64, 192</column>
<column name="send_data_c_U">0, 99, 0, -, 3, 64, 192</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="Block_split1_proc5_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ap_idle">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_ready">and, 0, 0, 2, 1, 1</column>
<column name="read_input_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_Block_split1_proc5_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_read_input_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_sync_reg_Block_split1_proc5_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_read_input_U0_ap_ready">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_rst_n_inv">1, 0, 1, 0</column>
<column name="ap_rst_reg_1">1, 0, 1, 0</column>
<column name="ap_rst_reg_2">1, 0, 1, 0</column>
<column name="ap_sync_reg_Block_split1_proc5_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_read_input_U0_ap_ready">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_control_AWVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_WVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WDATA">in, 32, s_axi, control, scalar</column>
<column name="s_axi_control_WSTRB">in, 4, s_axi, control, scalar</column>
<column name="s_axi_control_ARVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_RVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RDATA">out, 32, s_axi, control, scalar</column>
<column name="s_axi_control_RRESP">out, 2, s_axi, control, scalar</column>
<column name="s_axi_control_BVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BRESP">out, 2, s_axi, control, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_chain, krnl_LZW, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_chain, krnl_LZW, return value</column>
<column name="interrupt">out, 1, ap_ctrl_chain, krnl_LZW, return value</column>
<column name="m_axi_aximm1_AWVALID">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWREADY">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWADDR">out, 64, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWID">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWLEN">out, 8, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWSIZE">out, 3, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWBURST">out, 2, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWLOCK">out, 2, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWCACHE">out, 4, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWPROT">out, 3, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWQOS">out, 4, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWREGION">out, 4, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_AWUSER">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_WVALID">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_WREADY">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_WDATA">out, 32, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_WSTRB">out, 4, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_WLAST">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_WID">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_WUSER">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARVALID">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARREADY">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARADDR">out, 64, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARID">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARLEN">out, 8, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARSIZE">out, 3, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARBURST">out, 2, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARLOCK">out, 2, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARCACHE">out, 4, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARPROT">out, 3, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARQOS">out, 4, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARREGION">out, 4, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_ARUSER">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_RVALID">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_RREADY">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_RDATA">in, 32, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_RLAST">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_RID">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_RUSER">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_RRESP">in, 2, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_BVALID">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_BREADY">out, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_BRESP">in, 2, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_BID">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm1_BUSER">in, 1, m_axi, aximm1, pointer</column>
<column name="m_axi_aximm2_AWVALID">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWREADY">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWADDR">out, 64, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWID">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWLEN">out, 8, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWSIZE">out, 3, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWBURST">out, 2, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWLOCK">out, 2, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWCACHE">out, 4, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWPROT">out, 3, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWQOS">out, 4, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWREGION">out, 4, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_AWUSER">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_WVALID">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_WREADY">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_WDATA">out, 32, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_WSTRB">out, 4, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_WLAST">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_WID">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_WUSER">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARVALID">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARREADY">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARADDR">out, 64, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARID">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARLEN">out, 8, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARSIZE">out, 3, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARBURST">out, 2, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARLOCK">out, 2, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARCACHE">out, 4, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARPROT">out, 3, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARQOS">out, 4, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARREGION">out, 4, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_ARUSER">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_RVALID">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_RREADY">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_RDATA">in, 32, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_RLAST">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_RID">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_RUSER">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_RRESP">in, 2, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_BVALID">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_BREADY">out, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_BRESP">in, 2, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_BID">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm2_BUSER">in, 1, m_axi, aximm2, pointer</column>
<column name="m_axi_aximm3_AWVALID">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWREADY">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWADDR">out, 64, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWID">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWLEN">out, 8, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWSIZE">out, 3, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWBURST">out, 2, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWLOCK">out, 2, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWCACHE">out, 4, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWPROT">out, 3, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWQOS">out, 4, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWREGION">out, 4, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_AWUSER">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_WVALID">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_WREADY">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_WDATA">out, 32, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_WSTRB">out, 4, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_WLAST">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_WID">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_WUSER">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARVALID">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARREADY">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARADDR">out, 64, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARID">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARLEN">out, 8, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARSIZE">out, 3, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARBURST">out, 2, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARLOCK">out, 2, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARCACHE">out, 4, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARPROT">out, 3, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARQOS">out, 4, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARREGION">out, 4, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_ARUSER">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_RVALID">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_RREADY">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_RDATA">in, 32, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_RLAST">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_RID">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_RUSER">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_RRESP">in, 2, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_BVALID">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_BREADY">out, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_BRESP">in, 2, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_BID">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm3_BUSER">in, 1, m_axi, aximm3, pointer</column>
<column name="m_axi_aximm4_AWVALID">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWREADY">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWADDR">out, 64, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWID">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWLEN">out, 8, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWSIZE">out, 3, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWBURST">out, 2, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWLOCK">out, 2, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWCACHE">out, 4, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWPROT">out, 3, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWQOS">out, 4, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWREGION">out, 4, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_AWUSER">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_WVALID">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_WREADY">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_WDATA">out, 32, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_WSTRB">out, 4, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_WLAST">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_WID">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_WUSER">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARVALID">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARREADY">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARADDR">out, 64, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARID">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARLEN">out, 8, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARSIZE">out, 3, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARBURST">out, 2, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARLOCK">out, 2, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARCACHE">out, 4, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARPROT">out, 3, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARQOS">out, 4, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARREGION">out, 4, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_ARUSER">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_RVALID">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_RREADY">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_RDATA">in, 32, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_RLAST">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_RID">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_RUSER">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_RRESP">in, 2, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_BVALID">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_BREADY">out, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_BRESP">in, 2, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_BID">in, 1, m_axi, aximm4, pointer</column>
<column name="m_axi_aximm4_BUSER">in, 1, m_axi, aximm4, pointer</column>
</table>
</item>
</section>
</profile>
