// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="krnl_LZW_krnl_LZW,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=6.667000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.866910,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=76,HLS_SYN_DSP=0,HLS_SYN_FF=80046,HLS_SYN_LUT=25946,HLS_VERSION=2020_2}" *)

module krnl_LZW (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_aximm1_AWVALID,
        m_axi_aximm1_AWREADY,
        m_axi_aximm1_AWADDR,
        m_axi_aximm1_AWID,
        m_axi_aximm1_AWLEN,
        m_axi_aximm1_AWSIZE,
        m_axi_aximm1_AWBURST,
        m_axi_aximm1_AWLOCK,
        m_axi_aximm1_AWCACHE,
        m_axi_aximm1_AWPROT,
        m_axi_aximm1_AWQOS,
        m_axi_aximm1_AWREGION,
        m_axi_aximm1_AWUSER,
        m_axi_aximm1_WVALID,
        m_axi_aximm1_WREADY,
        m_axi_aximm1_WDATA,
        m_axi_aximm1_WSTRB,
        m_axi_aximm1_WLAST,
        m_axi_aximm1_WID,
        m_axi_aximm1_WUSER,
        m_axi_aximm1_ARVALID,
        m_axi_aximm1_ARREADY,
        m_axi_aximm1_ARADDR,
        m_axi_aximm1_ARID,
        m_axi_aximm1_ARLEN,
        m_axi_aximm1_ARSIZE,
        m_axi_aximm1_ARBURST,
        m_axi_aximm1_ARLOCK,
        m_axi_aximm1_ARCACHE,
        m_axi_aximm1_ARPROT,
        m_axi_aximm1_ARQOS,
        m_axi_aximm1_ARREGION,
        m_axi_aximm1_ARUSER,
        m_axi_aximm1_RVALID,
        m_axi_aximm1_RREADY,
        m_axi_aximm1_RDATA,
        m_axi_aximm1_RLAST,
        m_axi_aximm1_RID,
        m_axi_aximm1_RUSER,
        m_axi_aximm1_RRESP,
        m_axi_aximm1_BVALID,
        m_axi_aximm1_BREADY,
        m_axi_aximm1_BRESP,
        m_axi_aximm1_BID,
        m_axi_aximm1_BUSER,
        m_axi_aximm2_AWVALID,
        m_axi_aximm2_AWREADY,
        m_axi_aximm2_AWADDR,
        m_axi_aximm2_AWID,
        m_axi_aximm2_AWLEN,
        m_axi_aximm2_AWSIZE,
        m_axi_aximm2_AWBURST,
        m_axi_aximm2_AWLOCK,
        m_axi_aximm2_AWCACHE,
        m_axi_aximm2_AWPROT,
        m_axi_aximm2_AWQOS,
        m_axi_aximm2_AWREGION,
        m_axi_aximm2_AWUSER,
        m_axi_aximm2_WVALID,
        m_axi_aximm2_WREADY,
        m_axi_aximm2_WDATA,
        m_axi_aximm2_WSTRB,
        m_axi_aximm2_WLAST,
        m_axi_aximm2_WID,
        m_axi_aximm2_WUSER,
        m_axi_aximm2_ARVALID,
        m_axi_aximm2_ARREADY,
        m_axi_aximm2_ARADDR,
        m_axi_aximm2_ARID,
        m_axi_aximm2_ARLEN,
        m_axi_aximm2_ARSIZE,
        m_axi_aximm2_ARBURST,
        m_axi_aximm2_ARLOCK,
        m_axi_aximm2_ARCACHE,
        m_axi_aximm2_ARPROT,
        m_axi_aximm2_ARQOS,
        m_axi_aximm2_ARREGION,
        m_axi_aximm2_ARUSER,
        m_axi_aximm2_RVALID,
        m_axi_aximm2_RREADY,
        m_axi_aximm2_RDATA,
        m_axi_aximm2_RLAST,
        m_axi_aximm2_RID,
        m_axi_aximm2_RUSER,
        m_axi_aximm2_RRESP,
        m_axi_aximm2_BVALID,
        m_axi_aximm2_BREADY,
        m_axi_aximm2_BRESP,
        m_axi_aximm2_BID,
        m_axi_aximm2_BUSER,
        m_axi_aximm3_AWVALID,
        m_axi_aximm3_AWREADY,
        m_axi_aximm3_AWADDR,
        m_axi_aximm3_AWID,
        m_axi_aximm3_AWLEN,
        m_axi_aximm3_AWSIZE,
        m_axi_aximm3_AWBURST,
        m_axi_aximm3_AWLOCK,
        m_axi_aximm3_AWCACHE,
        m_axi_aximm3_AWPROT,
        m_axi_aximm3_AWQOS,
        m_axi_aximm3_AWREGION,
        m_axi_aximm3_AWUSER,
        m_axi_aximm3_WVALID,
        m_axi_aximm3_WREADY,
        m_axi_aximm3_WDATA,
        m_axi_aximm3_WSTRB,
        m_axi_aximm3_WLAST,
        m_axi_aximm3_WID,
        m_axi_aximm3_WUSER,
        m_axi_aximm3_ARVALID,
        m_axi_aximm3_ARREADY,
        m_axi_aximm3_ARADDR,
        m_axi_aximm3_ARID,
        m_axi_aximm3_ARLEN,
        m_axi_aximm3_ARSIZE,
        m_axi_aximm3_ARBURST,
        m_axi_aximm3_ARLOCK,
        m_axi_aximm3_ARCACHE,
        m_axi_aximm3_ARPROT,
        m_axi_aximm3_ARQOS,
        m_axi_aximm3_ARREGION,
        m_axi_aximm3_ARUSER,
        m_axi_aximm3_RVALID,
        m_axi_aximm3_RREADY,
        m_axi_aximm3_RDATA,
        m_axi_aximm3_RLAST,
        m_axi_aximm3_RID,
        m_axi_aximm3_RUSER,
        m_axi_aximm3_RRESP,
        m_axi_aximm3_BVALID,
        m_axi_aximm3_BREADY,
        m_axi_aximm3_BRESP,
        m_axi_aximm3_BID,
        m_axi_aximm3_BUSER,
        m_axi_aximm4_AWVALID,
        m_axi_aximm4_AWREADY,
        m_axi_aximm4_AWADDR,
        m_axi_aximm4_AWID,
        m_axi_aximm4_AWLEN,
        m_axi_aximm4_AWSIZE,
        m_axi_aximm4_AWBURST,
        m_axi_aximm4_AWLOCK,
        m_axi_aximm4_AWCACHE,
        m_axi_aximm4_AWPROT,
        m_axi_aximm4_AWQOS,
        m_axi_aximm4_AWREGION,
        m_axi_aximm4_AWUSER,
        m_axi_aximm4_WVALID,
        m_axi_aximm4_WREADY,
        m_axi_aximm4_WDATA,
        m_axi_aximm4_WSTRB,
        m_axi_aximm4_WLAST,
        m_axi_aximm4_WID,
        m_axi_aximm4_WUSER,
        m_axi_aximm4_ARVALID,
        m_axi_aximm4_ARREADY,
        m_axi_aximm4_ARADDR,
        m_axi_aximm4_ARID,
        m_axi_aximm4_ARLEN,
        m_axi_aximm4_ARSIZE,
        m_axi_aximm4_ARBURST,
        m_axi_aximm4_ARLOCK,
        m_axi_aximm4_ARCACHE,
        m_axi_aximm4_ARPROT,
        m_axi_aximm4_ARQOS,
        m_axi_aximm4_ARREGION,
        m_axi_aximm4_ARUSER,
        m_axi_aximm4_RVALID,
        m_axi_aximm4_RREADY,
        m_axi_aximm4_RDATA,
        m_axi_aximm4_RLAST,
        m_axi_aximm4_RID,
        m_axi_aximm4_RUSER,
        m_axi_aximm4_RRESP,
        m_axi_aximm4_BVALID,
        m_axi_aximm4_BREADY,
        m_axi_aximm4_BRESP,
        m_axi_aximm4_BID,
        m_axi_aximm4_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_AXIMM1_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM1_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM1_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM1_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM2_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM2_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM2_CACHE_VALUE = 3;
parameter    C_M_AXI_AXIMM3_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM3_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM3_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM3_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM3_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM3_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM3_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM3_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM3_CACHE_VALUE = 3;
parameter    C_M_AXI_AXIMM4_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM4_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM4_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM4_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM4_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM4_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM4_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM4_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM4_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM4_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM4_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM3_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM4_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_aximm1_AWVALID;
input   m_axi_aximm1_AWREADY;
output  [C_M_AXI_AXIMM1_ADDR_WIDTH - 1:0] m_axi_aximm1_AWADDR;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_AWID;
output  [7:0] m_axi_aximm1_AWLEN;
output  [2:0] m_axi_aximm1_AWSIZE;
output  [1:0] m_axi_aximm1_AWBURST;
output  [1:0] m_axi_aximm1_AWLOCK;
output  [3:0] m_axi_aximm1_AWCACHE;
output  [2:0] m_axi_aximm1_AWPROT;
output  [3:0] m_axi_aximm1_AWQOS;
output  [3:0] m_axi_aximm1_AWREGION;
output  [C_M_AXI_AXIMM1_AWUSER_WIDTH - 1:0] m_axi_aximm1_AWUSER;
output   m_axi_aximm1_WVALID;
input   m_axi_aximm1_WREADY;
output  [C_M_AXI_AXIMM1_DATA_WIDTH - 1:0] m_axi_aximm1_WDATA;
output  [C_M_AXI_AXIMM1_WSTRB_WIDTH - 1:0] m_axi_aximm1_WSTRB;
output   m_axi_aximm1_WLAST;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_WID;
output  [C_M_AXI_AXIMM1_WUSER_WIDTH - 1:0] m_axi_aximm1_WUSER;
output   m_axi_aximm1_ARVALID;
input   m_axi_aximm1_ARREADY;
output  [C_M_AXI_AXIMM1_ADDR_WIDTH - 1:0] m_axi_aximm1_ARADDR;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_ARID;
output  [7:0] m_axi_aximm1_ARLEN;
output  [2:0] m_axi_aximm1_ARSIZE;
output  [1:0] m_axi_aximm1_ARBURST;
output  [1:0] m_axi_aximm1_ARLOCK;
output  [3:0] m_axi_aximm1_ARCACHE;
output  [2:0] m_axi_aximm1_ARPROT;
output  [3:0] m_axi_aximm1_ARQOS;
output  [3:0] m_axi_aximm1_ARREGION;
output  [C_M_AXI_AXIMM1_ARUSER_WIDTH - 1:0] m_axi_aximm1_ARUSER;
input   m_axi_aximm1_RVALID;
output   m_axi_aximm1_RREADY;
input  [C_M_AXI_AXIMM1_DATA_WIDTH - 1:0] m_axi_aximm1_RDATA;
input   m_axi_aximm1_RLAST;
input  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_RID;
input  [C_M_AXI_AXIMM1_RUSER_WIDTH - 1:0] m_axi_aximm1_RUSER;
input  [1:0] m_axi_aximm1_RRESP;
input   m_axi_aximm1_BVALID;
output   m_axi_aximm1_BREADY;
input  [1:0] m_axi_aximm1_BRESP;
input  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_BID;
input  [C_M_AXI_AXIMM1_BUSER_WIDTH - 1:0] m_axi_aximm1_BUSER;
output   m_axi_aximm2_AWVALID;
input   m_axi_aximm2_AWREADY;
output  [C_M_AXI_AXIMM2_ADDR_WIDTH - 1:0] m_axi_aximm2_AWADDR;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_AWID;
output  [7:0] m_axi_aximm2_AWLEN;
output  [2:0] m_axi_aximm2_AWSIZE;
output  [1:0] m_axi_aximm2_AWBURST;
output  [1:0] m_axi_aximm2_AWLOCK;
output  [3:0] m_axi_aximm2_AWCACHE;
output  [2:0] m_axi_aximm2_AWPROT;
output  [3:0] m_axi_aximm2_AWQOS;
output  [3:0] m_axi_aximm2_AWREGION;
output  [C_M_AXI_AXIMM2_AWUSER_WIDTH - 1:0] m_axi_aximm2_AWUSER;
output   m_axi_aximm2_WVALID;
input   m_axi_aximm2_WREADY;
output  [C_M_AXI_AXIMM2_DATA_WIDTH - 1:0] m_axi_aximm2_WDATA;
output  [C_M_AXI_AXIMM2_WSTRB_WIDTH - 1:0] m_axi_aximm2_WSTRB;
output   m_axi_aximm2_WLAST;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_WID;
output  [C_M_AXI_AXIMM2_WUSER_WIDTH - 1:0] m_axi_aximm2_WUSER;
output   m_axi_aximm2_ARVALID;
input   m_axi_aximm2_ARREADY;
output  [C_M_AXI_AXIMM2_ADDR_WIDTH - 1:0] m_axi_aximm2_ARADDR;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_ARID;
output  [7:0] m_axi_aximm2_ARLEN;
output  [2:0] m_axi_aximm2_ARSIZE;
output  [1:0] m_axi_aximm2_ARBURST;
output  [1:0] m_axi_aximm2_ARLOCK;
output  [3:0] m_axi_aximm2_ARCACHE;
output  [2:0] m_axi_aximm2_ARPROT;
output  [3:0] m_axi_aximm2_ARQOS;
output  [3:0] m_axi_aximm2_ARREGION;
output  [C_M_AXI_AXIMM2_ARUSER_WIDTH - 1:0] m_axi_aximm2_ARUSER;
input   m_axi_aximm2_RVALID;
output   m_axi_aximm2_RREADY;
input  [C_M_AXI_AXIMM2_DATA_WIDTH - 1:0] m_axi_aximm2_RDATA;
input   m_axi_aximm2_RLAST;
input  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_RID;
input  [C_M_AXI_AXIMM2_RUSER_WIDTH - 1:0] m_axi_aximm2_RUSER;
input  [1:0] m_axi_aximm2_RRESP;
input   m_axi_aximm2_BVALID;
output   m_axi_aximm2_BREADY;
input  [1:0] m_axi_aximm2_BRESP;
input  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_BID;
input  [C_M_AXI_AXIMM2_BUSER_WIDTH - 1:0] m_axi_aximm2_BUSER;
output   m_axi_aximm3_AWVALID;
input   m_axi_aximm3_AWREADY;
output  [C_M_AXI_AXIMM3_ADDR_WIDTH - 1:0] m_axi_aximm3_AWADDR;
output  [C_M_AXI_AXIMM3_ID_WIDTH - 1:0] m_axi_aximm3_AWID;
output  [7:0] m_axi_aximm3_AWLEN;
output  [2:0] m_axi_aximm3_AWSIZE;
output  [1:0] m_axi_aximm3_AWBURST;
output  [1:0] m_axi_aximm3_AWLOCK;
output  [3:0] m_axi_aximm3_AWCACHE;
output  [2:0] m_axi_aximm3_AWPROT;
output  [3:0] m_axi_aximm3_AWQOS;
output  [3:0] m_axi_aximm3_AWREGION;
output  [C_M_AXI_AXIMM3_AWUSER_WIDTH - 1:0] m_axi_aximm3_AWUSER;
output   m_axi_aximm3_WVALID;
input   m_axi_aximm3_WREADY;
output  [C_M_AXI_AXIMM3_DATA_WIDTH - 1:0] m_axi_aximm3_WDATA;
output  [C_M_AXI_AXIMM3_WSTRB_WIDTH - 1:0] m_axi_aximm3_WSTRB;
output   m_axi_aximm3_WLAST;
output  [C_M_AXI_AXIMM3_ID_WIDTH - 1:0] m_axi_aximm3_WID;
output  [C_M_AXI_AXIMM3_WUSER_WIDTH - 1:0] m_axi_aximm3_WUSER;
output   m_axi_aximm3_ARVALID;
input   m_axi_aximm3_ARREADY;
output  [C_M_AXI_AXIMM3_ADDR_WIDTH - 1:0] m_axi_aximm3_ARADDR;
output  [C_M_AXI_AXIMM3_ID_WIDTH - 1:0] m_axi_aximm3_ARID;
output  [7:0] m_axi_aximm3_ARLEN;
output  [2:0] m_axi_aximm3_ARSIZE;
output  [1:0] m_axi_aximm3_ARBURST;
output  [1:0] m_axi_aximm3_ARLOCK;
output  [3:0] m_axi_aximm3_ARCACHE;
output  [2:0] m_axi_aximm3_ARPROT;
output  [3:0] m_axi_aximm3_ARQOS;
output  [3:0] m_axi_aximm3_ARREGION;
output  [C_M_AXI_AXIMM3_ARUSER_WIDTH - 1:0] m_axi_aximm3_ARUSER;
input   m_axi_aximm3_RVALID;
output   m_axi_aximm3_RREADY;
input  [C_M_AXI_AXIMM3_DATA_WIDTH - 1:0] m_axi_aximm3_RDATA;
input   m_axi_aximm3_RLAST;
input  [C_M_AXI_AXIMM3_ID_WIDTH - 1:0] m_axi_aximm3_RID;
input  [C_M_AXI_AXIMM3_RUSER_WIDTH - 1:0] m_axi_aximm3_RUSER;
input  [1:0] m_axi_aximm3_RRESP;
input   m_axi_aximm3_BVALID;
output   m_axi_aximm3_BREADY;
input  [1:0] m_axi_aximm3_BRESP;
input  [C_M_AXI_AXIMM3_ID_WIDTH - 1:0] m_axi_aximm3_BID;
input  [C_M_AXI_AXIMM3_BUSER_WIDTH - 1:0] m_axi_aximm3_BUSER;
output   m_axi_aximm4_AWVALID;
input   m_axi_aximm4_AWREADY;
output  [C_M_AXI_AXIMM4_ADDR_WIDTH - 1:0] m_axi_aximm4_AWADDR;
output  [C_M_AXI_AXIMM4_ID_WIDTH - 1:0] m_axi_aximm4_AWID;
output  [7:0] m_axi_aximm4_AWLEN;
output  [2:0] m_axi_aximm4_AWSIZE;
output  [1:0] m_axi_aximm4_AWBURST;
output  [1:0] m_axi_aximm4_AWLOCK;
output  [3:0] m_axi_aximm4_AWCACHE;
output  [2:0] m_axi_aximm4_AWPROT;
output  [3:0] m_axi_aximm4_AWQOS;
output  [3:0] m_axi_aximm4_AWREGION;
output  [C_M_AXI_AXIMM4_AWUSER_WIDTH - 1:0] m_axi_aximm4_AWUSER;
output   m_axi_aximm4_WVALID;
input   m_axi_aximm4_WREADY;
output  [C_M_AXI_AXIMM4_DATA_WIDTH - 1:0] m_axi_aximm4_WDATA;
output  [C_M_AXI_AXIMM4_WSTRB_WIDTH - 1:0] m_axi_aximm4_WSTRB;
output   m_axi_aximm4_WLAST;
output  [C_M_AXI_AXIMM4_ID_WIDTH - 1:0] m_axi_aximm4_WID;
output  [C_M_AXI_AXIMM4_WUSER_WIDTH - 1:0] m_axi_aximm4_WUSER;
output   m_axi_aximm4_ARVALID;
input   m_axi_aximm4_ARREADY;
output  [C_M_AXI_AXIMM4_ADDR_WIDTH - 1:0] m_axi_aximm4_ARADDR;
output  [C_M_AXI_AXIMM4_ID_WIDTH - 1:0] m_axi_aximm4_ARID;
output  [7:0] m_axi_aximm4_ARLEN;
output  [2:0] m_axi_aximm4_ARSIZE;
output  [1:0] m_axi_aximm4_ARBURST;
output  [1:0] m_axi_aximm4_ARLOCK;
output  [3:0] m_axi_aximm4_ARCACHE;
output  [2:0] m_axi_aximm4_ARPROT;
output  [3:0] m_axi_aximm4_ARQOS;
output  [3:0] m_axi_aximm4_ARREGION;
output  [C_M_AXI_AXIMM4_ARUSER_WIDTH - 1:0] m_axi_aximm4_ARUSER;
input   m_axi_aximm4_RVALID;
output   m_axi_aximm4_RREADY;
input  [C_M_AXI_AXIMM4_DATA_WIDTH - 1:0] m_axi_aximm4_RDATA;
input   m_axi_aximm4_RLAST;
input  [C_M_AXI_AXIMM4_ID_WIDTH - 1:0] m_axi_aximm4_RID;
input  [C_M_AXI_AXIMM4_RUSER_WIDTH - 1:0] m_axi_aximm4_RUSER;
input  [1:0] m_axi_aximm4_RRESP;
input   m_axi_aximm4_BVALID;
output   m_axi_aximm4_BREADY;
input  [1:0] m_axi_aximm4_BRESP;
input  [C_M_AXI_AXIMM4_ID_WIDTH - 1:0] m_axi_aximm4_BID;
input  [C_M_AXI_AXIMM4_BUSER_WIDTH - 1:0] m_axi_aximm4_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire   [63:0] in_r;
wire   [63:0] input_length;
wire   [63:0] send_data;
wire   [63:0] output_length;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire    aximm1_AWREADY;
wire    aximm1_WREADY;
wire    aximm1_ARREADY;
wire    aximm1_RVALID;
wire   [7:0] aximm1_RDATA;
wire    aximm1_RLAST;
wire   [0:0] aximm1_RID;
wire   [0:0] aximm1_RUSER;
wire   [1:0] aximm1_RRESP;
wire    aximm1_BVALID;
wire   [1:0] aximm1_BRESP;
wire   [0:0] aximm1_BID;
wire   [0:0] aximm1_BUSER;
wire    aximm2_AWREADY;
wire    aximm2_WREADY;
wire    aximm2_ARREADY;
wire    aximm2_RVALID;
wire   [15:0] aximm2_RDATA;
wire    aximm2_RLAST;
wire   [0:0] aximm2_RID;
wire   [0:0] aximm2_RUSER;
wire   [1:0] aximm2_RRESP;
wire    aximm2_BVALID;
wire   [1:0] aximm2_BRESP;
wire   [0:0] aximm2_BID;
wire   [0:0] aximm2_BUSER;
wire    aximm3_AWREADY;
wire    aximm3_WREADY;
wire    aximm3_ARREADY;
wire    aximm3_RVALID;
wire   [31:0] aximm3_RDATA;
wire    aximm3_RLAST;
wire   [0:0] aximm3_RID;
wire   [0:0] aximm3_RUSER;
wire   [1:0] aximm3_RRESP;
wire    aximm3_BVALID;
wire   [1:0] aximm3_BRESP;
wire   [0:0] aximm3_BID;
wire   [0:0] aximm3_BUSER;
wire    aximm4_AWREADY;
wire    aximm4_WREADY;
wire    aximm4_ARREADY;
wire    aximm4_RVALID;
wire   [15:0] aximm4_RDATA;
wire    aximm4_RLAST;
wire   [0:0] aximm4_RID;
wire   [0:0] aximm4_RUSER;
wire   [1:0] aximm4_RRESP;
wire    aximm4_BVALID;
wire   [1:0] aximm4_BRESP;
wire   [0:0] aximm4_BID;
wire   [0:0] aximm4_BUSER;
wire    Block_split1_proc5_U0_ap_start;
wire    Block_split1_proc5_U0_ap_done;
wire    Block_split1_proc5_U0_ap_continue;
wire    Block_split1_proc5_U0_ap_idle;
wire    Block_split1_proc5_U0_ap_ready;
wire    Block_split1_proc5_U0_start_out;
wire    Block_split1_proc5_U0_start_write;
wire    Block_split1_proc5_U0_m_axi_aximm2_AWVALID;
wire   [63:0] Block_split1_proc5_U0_m_axi_aximm2_AWADDR;
wire   [0:0] Block_split1_proc5_U0_m_axi_aximm2_AWID;
wire   [31:0] Block_split1_proc5_U0_m_axi_aximm2_AWLEN;
wire   [2:0] Block_split1_proc5_U0_m_axi_aximm2_AWSIZE;
wire   [1:0] Block_split1_proc5_U0_m_axi_aximm2_AWBURST;
wire   [1:0] Block_split1_proc5_U0_m_axi_aximm2_AWLOCK;
wire   [3:0] Block_split1_proc5_U0_m_axi_aximm2_AWCACHE;
wire   [2:0] Block_split1_proc5_U0_m_axi_aximm2_AWPROT;
wire   [3:0] Block_split1_proc5_U0_m_axi_aximm2_AWQOS;
wire   [3:0] Block_split1_proc5_U0_m_axi_aximm2_AWREGION;
wire   [0:0] Block_split1_proc5_U0_m_axi_aximm2_AWUSER;
wire    Block_split1_proc5_U0_m_axi_aximm2_WVALID;
wire   [15:0] Block_split1_proc5_U0_m_axi_aximm2_WDATA;
wire   [1:0] Block_split1_proc5_U0_m_axi_aximm2_WSTRB;
wire    Block_split1_proc5_U0_m_axi_aximm2_WLAST;
wire   [0:0] Block_split1_proc5_U0_m_axi_aximm2_WID;
wire   [0:0] Block_split1_proc5_U0_m_axi_aximm2_WUSER;
wire    Block_split1_proc5_U0_m_axi_aximm2_ARVALID;
wire   [63:0] Block_split1_proc5_U0_m_axi_aximm2_ARADDR;
wire   [0:0] Block_split1_proc5_U0_m_axi_aximm2_ARID;
wire   [31:0] Block_split1_proc5_U0_m_axi_aximm2_ARLEN;
wire   [2:0] Block_split1_proc5_U0_m_axi_aximm2_ARSIZE;
wire   [1:0] Block_split1_proc5_U0_m_axi_aximm2_ARBURST;
wire   [1:0] Block_split1_proc5_U0_m_axi_aximm2_ARLOCK;
wire   [3:0] Block_split1_proc5_U0_m_axi_aximm2_ARCACHE;
wire   [2:0] Block_split1_proc5_U0_m_axi_aximm2_ARPROT;
wire   [3:0] Block_split1_proc5_U0_m_axi_aximm2_ARQOS;
wire   [3:0] Block_split1_proc5_U0_m_axi_aximm2_ARREGION;
wire   [0:0] Block_split1_proc5_U0_m_axi_aximm2_ARUSER;
wire    Block_split1_proc5_U0_m_axi_aximm2_RREADY;
wire    Block_split1_proc5_U0_m_axi_aximm2_BREADY;
wire   [12:0] Block_split1_proc5_U0_in_len_V_out_out_din;
wire    Block_split1_proc5_U0_in_len_V_out_out_write;
wire   [63:0] Block_split1_proc5_U0_in_out_din;
wire    Block_split1_proc5_U0_in_out_write;
wire   [63:0] Block_split1_proc5_U0_send_data_out_din;
wire    Block_split1_proc5_U0_send_data_out_write;
wire   [63:0] Block_split1_proc5_U0_output_length_out_din;
wire    Block_split1_proc5_U0_output_length_out_write;
wire    read_input_U0_ap_start;
wire    read_input_U0_ap_done;
wire    read_input_U0_ap_continue;
wire    read_input_U0_ap_idle;
wire    read_input_U0_ap_ready;
wire    read_input_U0_m_axi_aximm1_AWVALID;
wire   [63:0] read_input_U0_m_axi_aximm1_AWADDR;
wire   [0:0] read_input_U0_m_axi_aximm1_AWID;
wire   [31:0] read_input_U0_m_axi_aximm1_AWLEN;
wire   [2:0] read_input_U0_m_axi_aximm1_AWSIZE;
wire   [1:0] read_input_U0_m_axi_aximm1_AWBURST;
wire   [1:0] read_input_U0_m_axi_aximm1_AWLOCK;
wire   [3:0] read_input_U0_m_axi_aximm1_AWCACHE;
wire   [2:0] read_input_U0_m_axi_aximm1_AWPROT;
wire   [3:0] read_input_U0_m_axi_aximm1_AWQOS;
wire   [3:0] read_input_U0_m_axi_aximm1_AWREGION;
wire   [0:0] read_input_U0_m_axi_aximm1_AWUSER;
wire    read_input_U0_m_axi_aximm1_WVALID;
wire   [7:0] read_input_U0_m_axi_aximm1_WDATA;
wire   [0:0] read_input_U0_m_axi_aximm1_WSTRB;
wire    read_input_U0_m_axi_aximm1_WLAST;
wire   [0:0] read_input_U0_m_axi_aximm1_WID;
wire   [0:0] read_input_U0_m_axi_aximm1_WUSER;
wire    read_input_U0_m_axi_aximm1_ARVALID;
wire   [63:0] read_input_U0_m_axi_aximm1_ARADDR;
wire   [0:0] read_input_U0_m_axi_aximm1_ARID;
wire   [31:0] read_input_U0_m_axi_aximm1_ARLEN;
wire   [2:0] read_input_U0_m_axi_aximm1_ARSIZE;
wire   [1:0] read_input_U0_m_axi_aximm1_ARBURST;
wire   [1:0] read_input_U0_m_axi_aximm1_ARLOCK;
wire   [3:0] read_input_U0_m_axi_aximm1_ARCACHE;
wire   [2:0] read_input_U0_m_axi_aximm1_ARPROT;
wire   [3:0] read_input_U0_m_axi_aximm1_ARQOS;
wire   [3:0] read_input_U0_m_axi_aximm1_ARREGION;
wire   [0:0] read_input_U0_m_axi_aximm1_ARUSER;
wire    read_input_U0_m_axi_aximm1_RREADY;
wire    read_input_U0_m_axi_aximm1_BREADY;
wire    read_input_U0_in_r_read;
wire    read_input_U0_in_len_V_loc_read;
wire   [12:0] read_input_U0_in_len_V_loc_out_din;
wire    read_input_U0_in_len_V_loc_out_write;
wire   [7:0] read_input_U0_inStream_in_din;
wire    read_input_U0_inStream_in_write;
wire    compute_LZW_U0_ap_start;
wire    compute_LZW_U0_ap_done;
wire    compute_LZW_U0_ap_continue;
wire    compute_LZW_U0_ap_idle;
wire    compute_LZW_U0_ap_ready;
wire    compute_LZW_U0_m_axi_aximm3_AWVALID;
wire   [63:0] compute_LZW_U0_m_axi_aximm3_AWADDR;
wire   [0:0] compute_LZW_U0_m_axi_aximm3_AWID;
wire   [31:0] compute_LZW_U0_m_axi_aximm3_AWLEN;
wire   [2:0] compute_LZW_U0_m_axi_aximm3_AWSIZE;
wire   [1:0] compute_LZW_U0_m_axi_aximm3_AWBURST;
wire   [1:0] compute_LZW_U0_m_axi_aximm3_AWLOCK;
wire   [3:0] compute_LZW_U0_m_axi_aximm3_AWCACHE;
wire   [2:0] compute_LZW_U0_m_axi_aximm3_AWPROT;
wire   [3:0] compute_LZW_U0_m_axi_aximm3_AWQOS;
wire   [3:0] compute_LZW_U0_m_axi_aximm3_AWREGION;
wire   [0:0] compute_LZW_U0_m_axi_aximm3_AWUSER;
wire    compute_LZW_U0_m_axi_aximm3_WVALID;
wire   [31:0] compute_LZW_U0_m_axi_aximm3_WDATA;
wire   [3:0] compute_LZW_U0_m_axi_aximm3_WSTRB;
wire    compute_LZW_U0_m_axi_aximm3_WLAST;
wire   [0:0] compute_LZW_U0_m_axi_aximm3_WID;
wire   [0:0] compute_LZW_U0_m_axi_aximm3_WUSER;
wire    compute_LZW_U0_m_axi_aximm3_ARVALID;
wire   [63:0] compute_LZW_U0_m_axi_aximm3_ARADDR;
wire   [0:0] compute_LZW_U0_m_axi_aximm3_ARID;
wire   [31:0] compute_LZW_U0_m_axi_aximm3_ARLEN;
wire   [2:0] compute_LZW_U0_m_axi_aximm3_ARSIZE;
wire   [1:0] compute_LZW_U0_m_axi_aximm3_ARBURST;
wire   [1:0] compute_LZW_U0_m_axi_aximm3_ARLOCK;
wire   [3:0] compute_LZW_U0_m_axi_aximm3_ARCACHE;
wire   [2:0] compute_LZW_U0_m_axi_aximm3_ARPROT;
wire   [3:0] compute_LZW_U0_m_axi_aximm3_ARQOS;
wire   [3:0] compute_LZW_U0_m_axi_aximm3_ARREGION;
wire   [0:0] compute_LZW_U0_m_axi_aximm3_ARUSER;
wire    compute_LZW_U0_m_axi_aximm3_RREADY;
wire    compute_LZW_U0_m_axi_aximm3_BREADY;
wire    compute_LZW_U0_m_axi_aximm4_AWVALID;
wire   [63:0] compute_LZW_U0_m_axi_aximm4_AWADDR;
wire   [0:0] compute_LZW_U0_m_axi_aximm4_AWID;
wire   [31:0] compute_LZW_U0_m_axi_aximm4_AWLEN;
wire   [2:0] compute_LZW_U0_m_axi_aximm4_AWSIZE;
wire   [1:0] compute_LZW_U0_m_axi_aximm4_AWBURST;
wire   [1:0] compute_LZW_U0_m_axi_aximm4_AWLOCK;
wire   [3:0] compute_LZW_U0_m_axi_aximm4_AWCACHE;
wire   [2:0] compute_LZW_U0_m_axi_aximm4_AWPROT;
wire   [3:0] compute_LZW_U0_m_axi_aximm4_AWQOS;
wire   [3:0] compute_LZW_U0_m_axi_aximm4_AWREGION;
wire   [0:0] compute_LZW_U0_m_axi_aximm4_AWUSER;
wire    compute_LZW_U0_m_axi_aximm4_WVALID;
wire   [15:0] compute_LZW_U0_m_axi_aximm4_WDATA;
wire   [1:0] compute_LZW_U0_m_axi_aximm4_WSTRB;
wire    compute_LZW_U0_m_axi_aximm4_WLAST;
wire   [0:0] compute_LZW_U0_m_axi_aximm4_WID;
wire   [0:0] compute_LZW_U0_m_axi_aximm4_WUSER;
wire    compute_LZW_U0_m_axi_aximm4_ARVALID;
wire   [63:0] compute_LZW_U0_m_axi_aximm4_ARADDR;
wire   [0:0] compute_LZW_U0_m_axi_aximm4_ARID;
wire   [31:0] compute_LZW_U0_m_axi_aximm4_ARLEN;
wire   [2:0] compute_LZW_U0_m_axi_aximm4_ARSIZE;
wire   [1:0] compute_LZW_U0_m_axi_aximm4_ARBURST;
wire   [1:0] compute_LZW_U0_m_axi_aximm4_ARLOCK;
wire   [3:0] compute_LZW_U0_m_axi_aximm4_ARCACHE;
wire   [2:0] compute_LZW_U0_m_axi_aximm4_ARPROT;
wire   [3:0] compute_LZW_U0_m_axi_aximm4_ARQOS;
wire   [3:0] compute_LZW_U0_m_axi_aximm4_ARREGION;
wire   [0:0] compute_LZW_U0_m_axi_aximm4_ARUSER;
wire    compute_LZW_U0_m_axi_aximm4_RREADY;
wire    compute_LZW_U0_m_axi_aximm4_BREADY;
wire    compute_LZW_U0_in_len_V_loc_read;
wire    compute_LZW_U0_send_data_read;
wire    compute_LZW_U0_output_length_read;
wire    compute_LZW_U0_inStream_in_read;
wire    ap_sync_continue;
wire    in_len_V_loc_c_full_n;
wire   [12:0] in_len_V_loc_c_dout;
wire    in_len_V_loc_c_empty_n;
wire    in_c_full_n;
wire   [63:0] in_c_dout;
wire    in_c_empty_n;
wire    send_data_c_full_n;
wire   [63:0] send_data_c_dout;
wire    send_data_c_empty_n;
wire    output_length_c_full_n;
wire   [63:0] output_length_c_dout;
wire    output_length_c_empty_n;
wire    in_len_V_loc_c7_full_n;
wire   [12:0] in_len_V_loc_c7_dout;
wire    in_len_V_loc_c7_empty_n;
wire    inStream_in_full_n;
wire   [7:0] inStream_in_dout;
wire    inStream_in_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_split1_proc5_U0_ap_ready;
wire    ap_sync_Block_split1_proc5_U0_ap_ready;
reg    ap_sync_reg_read_input_U0_ap_ready;
wire    ap_sync_read_input_U0_ap_ready;
wire   [0:0] start_for_compute_LZW_U0_din;
wire    start_for_compute_LZW_U0_full_n;
wire   [0:0] start_for_compute_LZW_U0_dout;
wire    start_for_compute_LZW_U0_empty_n;
wire    read_input_U0_start_full_n;
wire    read_input_U0_start_write;
wire    compute_LZW_U0_start_full_n;
wire    compute_LZW_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_Block_split1_proc5_U0_ap_ready = 1'b0;
#0 ap_sync_reg_read_input_U0_ap_ready = 1'b0;
end

krnl_LZW_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .in_r(in_r),
    .input_length(input_length),
    .send_data(send_data),
    .output_length(output_length),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

krnl_LZW_aximm1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM1_CACHE_VALUE ))
aximm1_m_axi_U(
    .AWVALID(m_axi_aximm1_AWVALID),
    .AWREADY(m_axi_aximm1_AWREADY),
    .AWADDR(m_axi_aximm1_AWADDR),
    .AWID(m_axi_aximm1_AWID),
    .AWLEN(m_axi_aximm1_AWLEN),
    .AWSIZE(m_axi_aximm1_AWSIZE),
    .AWBURST(m_axi_aximm1_AWBURST),
    .AWLOCK(m_axi_aximm1_AWLOCK),
    .AWCACHE(m_axi_aximm1_AWCACHE),
    .AWPROT(m_axi_aximm1_AWPROT),
    .AWQOS(m_axi_aximm1_AWQOS),
    .AWREGION(m_axi_aximm1_AWREGION),
    .AWUSER(m_axi_aximm1_AWUSER),
    .WVALID(m_axi_aximm1_WVALID),
    .WREADY(m_axi_aximm1_WREADY),
    .WDATA(m_axi_aximm1_WDATA),
    .WSTRB(m_axi_aximm1_WSTRB),
    .WLAST(m_axi_aximm1_WLAST),
    .WID(m_axi_aximm1_WID),
    .WUSER(m_axi_aximm1_WUSER),
    .ARVALID(m_axi_aximm1_ARVALID),
    .ARREADY(m_axi_aximm1_ARREADY),
    .ARADDR(m_axi_aximm1_ARADDR),
    .ARID(m_axi_aximm1_ARID),
    .ARLEN(m_axi_aximm1_ARLEN),
    .ARSIZE(m_axi_aximm1_ARSIZE),
    .ARBURST(m_axi_aximm1_ARBURST),
    .ARLOCK(m_axi_aximm1_ARLOCK),
    .ARCACHE(m_axi_aximm1_ARCACHE),
    .ARPROT(m_axi_aximm1_ARPROT),
    .ARQOS(m_axi_aximm1_ARQOS),
    .ARREGION(m_axi_aximm1_ARREGION),
    .ARUSER(m_axi_aximm1_ARUSER),
    .RVALID(m_axi_aximm1_RVALID),
    .RREADY(m_axi_aximm1_RREADY),
    .RDATA(m_axi_aximm1_RDATA),
    .RLAST(m_axi_aximm1_RLAST),
    .RID(m_axi_aximm1_RID),
    .RUSER(m_axi_aximm1_RUSER),
    .RRESP(m_axi_aximm1_RRESP),
    .BVALID(m_axi_aximm1_BVALID),
    .BREADY(m_axi_aximm1_BREADY),
    .BRESP(m_axi_aximm1_BRESP),
    .BID(m_axi_aximm1_BID),
    .BUSER(m_axi_aximm1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(read_input_U0_m_axi_aximm1_ARVALID),
    .I_ARREADY(aximm1_ARREADY),
    .I_ARADDR(read_input_U0_m_axi_aximm1_ARADDR),
    .I_ARID(read_input_U0_m_axi_aximm1_ARID),
    .I_ARLEN(read_input_U0_m_axi_aximm1_ARLEN),
    .I_ARSIZE(read_input_U0_m_axi_aximm1_ARSIZE),
    .I_ARLOCK(read_input_U0_m_axi_aximm1_ARLOCK),
    .I_ARCACHE(read_input_U0_m_axi_aximm1_ARCACHE),
    .I_ARQOS(read_input_U0_m_axi_aximm1_ARQOS),
    .I_ARPROT(read_input_U0_m_axi_aximm1_ARPROT),
    .I_ARUSER(read_input_U0_m_axi_aximm1_ARUSER),
    .I_ARBURST(read_input_U0_m_axi_aximm1_ARBURST),
    .I_ARREGION(read_input_U0_m_axi_aximm1_ARREGION),
    .I_RVALID(aximm1_RVALID),
    .I_RREADY(read_input_U0_m_axi_aximm1_RREADY),
    .I_RDATA(aximm1_RDATA),
    .I_RID(aximm1_RID),
    .I_RUSER(aximm1_RUSER),
    .I_RRESP(aximm1_RRESP),
    .I_RLAST(aximm1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(aximm1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(aximm1_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(aximm1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(aximm1_BRESP),
    .I_BID(aximm1_BID),
    .I_BUSER(aximm1_BUSER)
);

krnl_LZW_aximm2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM2_CACHE_VALUE ))
aximm2_m_axi_U(
    .AWVALID(m_axi_aximm2_AWVALID),
    .AWREADY(m_axi_aximm2_AWREADY),
    .AWADDR(m_axi_aximm2_AWADDR),
    .AWID(m_axi_aximm2_AWID),
    .AWLEN(m_axi_aximm2_AWLEN),
    .AWSIZE(m_axi_aximm2_AWSIZE),
    .AWBURST(m_axi_aximm2_AWBURST),
    .AWLOCK(m_axi_aximm2_AWLOCK),
    .AWCACHE(m_axi_aximm2_AWCACHE),
    .AWPROT(m_axi_aximm2_AWPROT),
    .AWQOS(m_axi_aximm2_AWQOS),
    .AWREGION(m_axi_aximm2_AWREGION),
    .AWUSER(m_axi_aximm2_AWUSER),
    .WVALID(m_axi_aximm2_WVALID),
    .WREADY(m_axi_aximm2_WREADY),
    .WDATA(m_axi_aximm2_WDATA),
    .WSTRB(m_axi_aximm2_WSTRB),
    .WLAST(m_axi_aximm2_WLAST),
    .WID(m_axi_aximm2_WID),
    .WUSER(m_axi_aximm2_WUSER),
    .ARVALID(m_axi_aximm2_ARVALID),
    .ARREADY(m_axi_aximm2_ARREADY),
    .ARADDR(m_axi_aximm2_ARADDR),
    .ARID(m_axi_aximm2_ARID),
    .ARLEN(m_axi_aximm2_ARLEN),
    .ARSIZE(m_axi_aximm2_ARSIZE),
    .ARBURST(m_axi_aximm2_ARBURST),
    .ARLOCK(m_axi_aximm2_ARLOCK),
    .ARCACHE(m_axi_aximm2_ARCACHE),
    .ARPROT(m_axi_aximm2_ARPROT),
    .ARQOS(m_axi_aximm2_ARQOS),
    .ARREGION(m_axi_aximm2_ARREGION),
    .ARUSER(m_axi_aximm2_ARUSER),
    .RVALID(m_axi_aximm2_RVALID),
    .RREADY(m_axi_aximm2_RREADY),
    .RDATA(m_axi_aximm2_RDATA),
    .RLAST(m_axi_aximm2_RLAST),
    .RID(m_axi_aximm2_RID),
    .RUSER(m_axi_aximm2_RUSER),
    .RRESP(m_axi_aximm2_RRESP),
    .BVALID(m_axi_aximm2_BVALID),
    .BREADY(m_axi_aximm2_BREADY),
    .BRESP(m_axi_aximm2_BRESP),
    .BID(m_axi_aximm2_BID),
    .BUSER(m_axi_aximm2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Block_split1_proc5_U0_m_axi_aximm2_ARVALID),
    .I_ARREADY(aximm2_ARREADY),
    .I_ARADDR(Block_split1_proc5_U0_m_axi_aximm2_ARADDR),
    .I_ARID(Block_split1_proc5_U0_m_axi_aximm2_ARID),
    .I_ARLEN(Block_split1_proc5_U0_m_axi_aximm2_ARLEN),
    .I_ARSIZE(Block_split1_proc5_U0_m_axi_aximm2_ARSIZE),
    .I_ARLOCK(Block_split1_proc5_U0_m_axi_aximm2_ARLOCK),
    .I_ARCACHE(Block_split1_proc5_U0_m_axi_aximm2_ARCACHE),
    .I_ARQOS(Block_split1_proc5_U0_m_axi_aximm2_ARQOS),
    .I_ARPROT(Block_split1_proc5_U0_m_axi_aximm2_ARPROT),
    .I_ARUSER(Block_split1_proc5_U0_m_axi_aximm2_ARUSER),
    .I_ARBURST(Block_split1_proc5_U0_m_axi_aximm2_ARBURST),
    .I_ARREGION(Block_split1_proc5_U0_m_axi_aximm2_ARREGION),
    .I_RVALID(aximm2_RVALID),
    .I_RREADY(Block_split1_proc5_U0_m_axi_aximm2_RREADY),
    .I_RDATA(aximm2_RDATA),
    .I_RID(aximm2_RID),
    .I_RUSER(aximm2_RUSER),
    .I_RRESP(aximm2_RRESP),
    .I_RLAST(aximm2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(aximm2_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(aximm2_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(aximm2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(aximm2_BRESP),
    .I_BID(aximm2_BID),
    .I_BUSER(aximm2_BUSER)
);

krnl_LZW_aximm3_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM3_CACHE_VALUE ))
aximm3_m_axi_U(
    .AWVALID(m_axi_aximm3_AWVALID),
    .AWREADY(m_axi_aximm3_AWREADY),
    .AWADDR(m_axi_aximm3_AWADDR),
    .AWID(m_axi_aximm3_AWID),
    .AWLEN(m_axi_aximm3_AWLEN),
    .AWSIZE(m_axi_aximm3_AWSIZE),
    .AWBURST(m_axi_aximm3_AWBURST),
    .AWLOCK(m_axi_aximm3_AWLOCK),
    .AWCACHE(m_axi_aximm3_AWCACHE),
    .AWPROT(m_axi_aximm3_AWPROT),
    .AWQOS(m_axi_aximm3_AWQOS),
    .AWREGION(m_axi_aximm3_AWREGION),
    .AWUSER(m_axi_aximm3_AWUSER),
    .WVALID(m_axi_aximm3_WVALID),
    .WREADY(m_axi_aximm3_WREADY),
    .WDATA(m_axi_aximm3_WDATA),
    .WSTRB(m_axi_aximm3_WSTRB),
    .WLAST(m_axi_aximm3_WLAST),
    .WID(m_axi_aximm3_WID),
    .WUSER(m_axi_aximm3_WUSER),
    .ARVALID(m_axi_aximm3_ARVALID),
    .ARREADY(m_axi_aximm3_ARREADY),
    .ARADDR(m_axi_aximm3_ARADDR),
    .ARID(m_axi_aximm3_ARID),
    .ARLEN(m_axi_aximm3_ARLEN),
    .ARSIZE(m_axi_aximm3_ARSIZE),
    .ARBURST(m_axi_aximm3_ARBURST),
    .ARLOCK(m_axi_aximm3_ARLOCK),
    .ARCACHE(m_axi_aximm3_ARCACHE),
    .ARPROT(m_axi_aximm3_ARPROT),
    .ARQOS(m_axi_aximm3_ARQOS),
    .ARREGION(m_axi_aximm3_ARREGION),
    .ARUSER(m_axi_aximm3_ARUSER),
    .RVALID(m_axi_aximm3_RVALID),
    .RREADY(m_axi_aximm3_RREADY),
    .RDATA(m_axi_aximm3_RDATA),
    .RLAST(m_axi_aximm3_RLAST),
    .RID(m_axi_aximm3_RID),
    .RUSER(m_axi_aximm3_RUSER),
    .RRESP(m_axi_aximm3_RRESP),
    .BVALID(m_axi_aximm3_BVALID),
    .BREADY(m_axi_aximm3_BREADY),
    .BRESP(m_axi_aximm3_BRESP),
    .BID(m_axi_aximm3_BID),
    .BUSER(m_axi_aximm3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(aximm3_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(aximm3_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(aximm3_RDATA),
    .I_RID(aximm3_RID),
    .I_RUSER(aximm3_RUSER),
    .I_RRESP(aximm3_RRESP),
    .I_RLAST(aximm3_RLAST),
    .I_AWVALID(compute_LZW_U0_m_axi_aximm3_AWVALID),
    .I_AWREADY(aximm3_AWREADY),
    .I_AWADDR(compute_LZW_U0_m_axi_aximm3_AWADDR),
    .I_AWID(compute_LZW_U0_m_axi_aximm3_AWID),
    .I_AWLEN(compute_LZW_U0_m_axi_aximm3_AWLEN),
    .I_AWSIZE(compute_LZW_U0_m_axi_aximm3_AWSIZE),
    .I_AWLOCK(compute_LZW_U0_m_axi_aximm3_AWLOCK),
    .I_AWCACHE(compute_LZW_U0_m_axi_aximm3_AWCACHE),
    .I_AWQOS(compute_LZW_U0_m_axi_aximm3_AWQOS),
    .I_AWPROT(compute_LZW_U0_m_axi_aximm3_AWPROT),
    .I_AWUSER(compute_LZW_U0_m_axi_aximm3_AWUSER),
    .I_AWBURST(compute_LZW_U0_m_axi_aximm3_AWBURST),
    .I_AWREGION(compute_LZW_U0_m_axi_aximm3_AWREGION),
    .I_WVALID(compute_LZW_U0_m_axi_aximm3_WVALID),
    .I_WREADY(aximm3_WREADY),
    .I_WDATA(compute_LZW_U0_m_axi_aximm3_WDATA),
    .I_WID(compute_LZW_U0_m_axi_aximm3_WID),
    .I_WUSER(compute_LZW_U0_m_axi_aximm3_WUSER),
    .I_WLAST(compute_LZW_U0_m_axi_aximm3_WLAST),
    .I_WSTRB(compute_LZW_U0_m_axi_aximm3_WSTRB),
    .I_BVALID(aximm3_BVALID),
    .I_BREADY(compute_LZW_U0_m_axi_aximm3_BREADY),
    .I_BRESP(aximm3_BRESP),
    .I_BID(aximm3_BID),
    .I_BUSER(aximm3_BUSER)
);

krnl_LZW_aximm4_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM4_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM4_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM4_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM4_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM4_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM4_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM4_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM4_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM4_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM4_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM4_CACHE_VALUE ))
aximm4_m_axi_U(
    .AWVALID(m_axi_aximm4_AWVALID),
    .AWREADY(m_axi_aximm4_AWREADY),
    .AWADDR(m_axi_aximm4_AWADDR),
    .AWID(m_axi_aximm4_AWID),
    .AWLEN(m_axi_aximm4_AWLEN),
    .AWSIZE(m_axi_aximm4_AWSIZE),
    .AWBURST(m_axi_aximm4_AWBURST),
    .AWLOCK(m_axi_aximm4_AWLOCK),
    .AWCACHE(m_axi_aximm4_AWCACHE),
    .AWPROT(m_axi_aximm4_AWPROT),
    .AWQOS(m_axi_aximm4_AWQOS),
    .AWREGION(m_axi_aximm4_AWREGION),
    .AWUSER(m_axi_aximm4_AWUSER),
    .WVALID(m_axi_aximm4_WVALID),
    .WREADY(m_axi_aximm4_WREADY),
    .WDATA(m_axi_aximm4_WDATA),
    .WSTRB(m_axi_aximm4_WSTRB),
    .WLAST(m_axi_aximm4_WLAST),
    .WID(m_axi_aximm4_WID),
    .WUSER(m_axi_aximm4_WUSER),
    .ARVALID(m_axi_aximm4_ARVALID),
    .ARREADY(m_axi_aximm4_ARREADY),
    .ARADDR(m_axi_aximm4_ARADDR),
    .ARID(m_axi_aximm4_ARID),
    .ARLEN(m_axi_aximm4_ARLEN),
    .ARSIZE(m_axi_aximm4_ARSIZE),
    .ARBURST(m_axi_aximm4_ARBURST),
    .ARLOCK(m_axi_aximm4_ARLOCK),
    .ARCACHE(m_axi_aximm4_ARCACHE),
    .ARPROT(m_axi_aximm4_ARPROT),
    .ARQOS(m_axi_aximm4_ARQOS),
    .ARREGION(m_axi_aximm4_ARREGION),
    .ARUSER(m_axi_aximm4_ARUSER),
    .RVALID(m_axi_aximm4_RVALID),
    .RREADY(m_axi_aximm4_RREADY),
    .RDATA(m_axi_aximm4_RDATA),
    .RLAST(m_axi_aximm4_RLAST),
    .RID(m_axi_aximm4_RID),
    .RUSER(m_axi_aximm4_RUSER),
    .RRESP(m_axi_aximm4_RRESP),
    .BVALID(m_axi_aximm4_BVALID),
    .BREADY(m_axi_aximm4_BREADY),
    .BRESP(m_axi_aximm4_BRESP),
    .BID(m_axi_aximm4_BID),
    .BUSER(m_axi_aximm4_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(aximm4_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(aximm4_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(aximm4_RDATA),
    .I_RID(aximm4_RID),
    .I_RUSER(aximm4_RUSER),
    .I_RRESP(aximm4_RRESP),
    .I_RLAST(aximm4_RLAST),
    .I_AWVALID(compute_LZW_U0_m_axi_aximm4_AWVALID),
    .I_AWREADY(aximm4_AWREADY),
    .I_AWADDR(compute_LZW_U0_m_axi_aximm4_AWADDR),
    .I_AWID(compute_LZW_U0_m_axi_aximm4_AWID),
    .I_AWLEN(compute_LZW_U0_m_axi_aximm4_AWLEN),
    .I_AWSIZE(compute_LZW_U0_m_axi_aximm4_AWSIZE),
    .I_AWLOCK(compute_LZW_U0_m_axi_aximm4_AWLOCK),
    .I_AWCACHE(compute_LZW_U0_m_axi_aximm4_AWCACHE),
    .I_AWQOS(compute_LZW_U0_m_axi_aximm4_AWQOS),
    .I_AWPROT(compute_LZW_U0_m_axi_aximm4_AWPROT),
    .I_AWUSER(compute_LZW_U0_m_axi_aximm4_AWUSER),
    .I_AWBURST(compute_LZW_U0_m_axi_aximm4_AWBURST),
    .I_AWREGION(compute_LZW_U0_m_axi_aximm4_AWREGION),
    .I_WVALID(compute_LZW_U0_m_axi_aximm4_WVALID),
    .I_WREADY(aximm4_WREADY),
    .I_WDATA(compute_LZW_U0_m_axi_aximm4_WDATA),
    .I_WID(compute_LZW_U0_m_axi_aximm4_WID),
    .I_WUSER(compute_LZW_U0_m_axi_aximm4_WUSER),
    .I_WLAST(compute_LZW_U0_m_axi_aximm4_WLAST),
    .I_WSTRB(compute_LZW_U0_m_axi_aximm4_WSTRB),
    .I_BVALID(aximm4_BVALID),
    .I_BREADY(compute_LZW_U0_m_axi_aximm4_BREADY),
    .I_BRESP(aximm4_BRESP),
    .I_BID(aximm4_BID),
    .I_BUSER(aximm4_BUSER)
);

krnl_LZW_Block_split1_proc5 Block_split1_proc5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_split1_proc5_U0_ap_start),
    .start_full_n(start_for_compute_LZW_U0_full_n),
    .ap_done(Block_split1_proc5_U0_ap_done),
    .ap_continue(Block_split1_proc5_U0_ap_continue),
    .ap_idle(Block_split1_proc5_U0_ap_idle),
    .ap_ready(Block_split1_proc5_U0_ap_ready),
    .start_out(Block_split1_proc5_U0_start_out),
    .start_write(Block_split1_proc5_U0_start_write),
    .input_length(input_length),
    .m_axi_aximm2_AWVALID(Block_split1_proc5_U0_m_axi_aximm2_AWVALID),
    .m_axi_aximm2_AWREADY(1'b0),
    .m_axi_aximm2_AWADDR(Block_split1_proc5_U0_m_axi_aximm2_AWADDR),
    .m_axi_aximm2_AWID(Block_split1_proc5_U0_m_axi_aximm2_AWID),
    .m_axi_aximm2_AWLEN(Block_split1_proc5_U0_m_axi_aximm2_AWLEN),
    .m_axi_aximm2_AWSIZE(Block_split1_proc5_U0_m_axi_aximm2_AWSIZE),
    .m_axi_aximm2_AWBURST(Block_split1_proc5_U0_m_axi_aximm2_AWBURST),
    .m_axi_aximm2_AWLOCK(Block_split1_proc5_U0_m_axi_aximm2_AWLOCK),
    .m_axi_aximm2_AWCACHE(Block_split1_proc5_U0_m_axi_aximm2_AWCACHE),
    .m_axi_aximm2_AWPROT(Block_split1_proc5_U0_m_axi_aximm2_AWPROT),
    .m_axi_aximm2_AWQOS(Block_split1_proc5_U0_m_axi_aximm2_AWQOS),
    .m_axi_aximm2_AWREGION(Block_split1_proc5_U0_m_axi_aximm2_AWREGION),
    .m_axi_aximm2_AWUSER(Block_split1_proc5_U0_m_axi_aximm2_AWUSER),
    .m_axi_aximm2_WVALID(Block_split1_proc5_U0_m_axi_aximm2_WVALID),
    .m_axi_aximm2_WREADY(1'b0),
    .m_axi_aximm2_WDATA(Block_split1_proc5_U0_m_axi_aximm2_WDATA),
    .m_axi_aximm2_WSTRB(Block_split1_proc5_U0_m_axi_aximm2_WSTRB),
    .m_axi_aximm2_WLAST(Block_split1_proc5_U0_m_axi_aximm2_WLAST),
    .m_axi_aximm2_WID(Block_split1_proc5_U0_m_axi_aximm2_WID),
    .m_axi_aximm2_WUSER(Block_split1_proc5_U0_m_axi_aximm2_WUSER),
    .m_axi_aximm2_ARVALID(Block_split1_proc5_U0_m_axi_aximm2_ARVALID),
    .m_axi_aximm2_ARREADY(aximm2_ARREADY),
    .m_axi_aximm2_ARADDR(Block_split1_proc5_U0_m_axi_aximm2_ARADDR),
    .m_axi_aximm2_ARID(Block_split1_proc5_U0_m_axi_aximm2_ARID),
    .m_axi_aximm2_ARLEN(Block_split1_proc5_U0_m_axi_aximm2_ARLEN),
    .m_axi_aximm2_ARSIZE(Block_split1_proc5_U0_m_axi_aximm2_ARSIZE),
    .m_axi_aximm2_ARBURST(Block_split1_proc5_U0_m_axi_aximm2_ARBURST),
    .m_axi_aximm2_ARLOCK(Block_split1_proc5_U0_m_axi_aximm2_ARLOCK),
    .m_axi_aximm2_ARCACHE(Block_split1_proc5_U0_m_axi_aximm2_ARCACHE),
    .m_axi_aximm2_ARPROT(Block_split1_proc5_U0_m_axi_aximm2_ARPROT),
    .m_axi_aximm2_ARQOS(Block_split1_proc5_U0_m_axi_aximm2_ARQOS),
    .m_axi_aximm2_ARREGION(Block_split1_proc5_U0_m_axi_aximm2_ARREGION),
    .m_axi_aximm2_ARUSER(Block_split1_proc5_U0_m_axi_aximm2_ARUSER),
    .m_axi_aximm2_RVALID(aximm2_RVALID),
    .m_axi_aximm2_RREADY(Block_split1_proc5_U0_m_axi_aximm2_RREADY),
    .m_axi_aximm2_RDATA(aximm2_RDATA),
    .m_axi_aximm2_RLAST(aximm2_RLAST),
    .m_axi_aximm2_RID(aximm2_RID),
    .m_axi_aximm2_RUSER(aximm2_RUSER),
    .m_axi_aximm2_RRESP(aximm2_RRESP),
    .m_axi_aximm2_BVALID(1'b0),
    .m_axi_aximm2_BREADY(Block_split1_proc5_U0_m_axi_aximm2_BREADY),
    .m_axi_aximm2_BRESP(2'd0),
    .m_axi_aximm2_BID(1'd0),
    .m_axi_aximm2_BUSER(1'd0),
    .in_r(in_r),
    .send_data(send_data),
    .output_length(output_length),
    .in_len_V_out_out_din(Block_split1_proc5_U0_in_len_V_out_out_din),
    .in_len_V_out_out_full_n(in_len_V_loc_c_full_n),
    .in_len_V_out_out_write(Block_split1_proc5_U0_in_len_V_out_out_write),
    .in_out_din(Block_split1_proc5_U0_in_out_din),
    .in_out_full_n(in_c_full_n),
    .in_out_write(Block_split1_proc5_U0_in_out_write),
    .send_data_out_din(Block_split1_proc5_U0_send_data_out_din),
    .send_data_out_full_n(send_data_c_full_n),
    .send_data_out_write(Block_split1_proc5_U0_send_data_out_write),
    .output_length_out_din(Block_split1_proc5_U0_output_length_out_din),
    .output_length_out_full_n(output_length_c_full_n),
    .output_length_out_write(Block_split1_proc5_U0_output_length_out_write)
);

krnl_LZW_read_input read_input_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(read_input_U0_ap_start),
    .ap_done(read_input_U0_ap_done),
    .ap_continue(read_input_U0_ap_continue),
    .ap_idle(read_input_U0_ap_idle),
    .ap_ready(read_input_U0_ap_ready),
    .m_axi_aximm1_AWVALID(read_input_U0_m_axi_aximm1_AWVALID),
    .m_axi_aximm1_AWREADY(1'b0),
    .m_axi_aximm1_AWADDR(read_input_U0_m_axi_aximm1_AWADDR),
    .m_axi_aximm1_AWID(read_input_U0_m_axi_aximm1_AWID),
    .m_axi_aximm1_AWLEN(read_input_U0_m_axi_aximm1_AWLEN),
    .m_axi_aximm1_AWSIZE(read_input_U0_m_axi_aximm1_AWSIZE),
    .m_axi_aximm1_AWBURST(read_input_U0_m_axi_aximm1_AWBURST),
    .m_axi_aximm1_AWLOCK(read_input_U0_m_axi_aximm1_AWLOCK),
    .m_axi_aximm1_AWCACHE(read_input_U0_m_axi_aximm1_AWCACHE),
    .m_axi_aximm1_AWPROT(read_input_U0_m_axi_aximm1_AWPROT),
    .m_axi_aximm1_AWQOS(read_input_U0_m_axi_aximm1_AWQOS),
    .m_axi_aximm1_AWREGION(read_input_U0_m_axi_aximm1_AWREGION),
    .m_axi_aximm1_AWUSER(read_input_U0_m_axi_aximm1_AWUSER),
    .m_axi_aximm1_WVALID(read_input_U0_m_axi_aximm1_WVALID),
    .m_axi_aximm1_WREADY(1'b0),
    .m_axi_aximm1_WDATA(read_input_U0_m_axi_aximm1_WDATA),
    .m_axi_aximm1_WSTRB(read_input_U0_m_axi_aximm1_WSTRB),
    .m_axi_aximm1_WLAST(read_input_U0_m_axi_aximm1_WLAST),
    .m_axi_aximm1_WID(read_input_U0_m_axi_aximm1_WID),
    .m_axi_aximm1_WUSER(read_input_U0_m_axi_aximm1_WUSER),
    .m_axi_aximm1_ARVALID(read_input_U0_m_axi_aximm1_ARVALID),
    .m_axi_aximm1_ARREADY(aximm1_ARREADY),
    .m_axi_aximm1_ARADDR(read_input_U0_m_axi_aximm1_ARADDR),
    .m_axi_aximm1_ARID(read_input_U0_m_axi_aximm1_ARID),
    .m_axi_aximm1_ARLEN(read_input_U0_m_axi_aximm1_ARLEN),
    .m_axi_aximm1_ARSIZE(read_input_U0_m_axi_aximm1_ARSIZE),
    .m_axi_aximm1_ARBURST(read_input_U0_m_axi_aximm1_ARBURST),
    .m_axi_aximm1_ARLOCK(read_input_U0_m_axi_aximm1_ARLOCK),
    .m_axi_aximm1_ARCACHE(read_input_U0_m_axi_aximm1_ARCACHE),
    .m_axi_aximm1_ARPROT(read_input_U0_m_axi_aximm1_ARPROT),
    .m_axi_aximm1_ARQOS(read_input_U0_m_axi_aximm1_ARQOS),
    .m_axi_aximm1_ARREGION(read_input_U0_m_axi_aximm1_ARREGION),
    .m_axi_aximm1_ARUSER(read_input_U0_m_axi_aximm1_ARUSER),
    .m_axi_aximm1_RVALID(aximm1_RVALID),
    .m_axi_aximm1_RREADY(read_input_U0_m_axi_aximm1_RREADY),
    .m_axi_aximm1_RDATA(aximm1_RDATA),
    .m_axi_aximm1_RLAST(aximm1_RLAST),
    .m_axi_aximm1_RID(aximm1_RID),
    .m_axi_aximm1_RUSER(aximm1_RUSER),
    .m_axi_aximm1_RRESP(aximm1_RRESP),
    .m_axi_aximm1_BVALID(1'b0),
    .m_axi_aximm1_BREADY(read_input_U0_m_axi_aximm1_BREADY),
    .m_axi_aximm1_BRESP(2'd0),
    .m_axi_aximm1_BID(1'd0),
    .m_axi_aximm1_BUSER(1'd0),
    .in_r_dout(in_c_dout),
    .in_r_empty_n(in_c_empty_n),
    .in_r_read(read_input_U0_in_r_read),
    .in_len_V_loc_dout(in_len_V_loc_c_dout),
    .in_len_V_loc_empty_n(in_len_V_loc_c_empty_n),
    .in_len_V_loc_read(read_input_U0_in_len_V_loc_read),
    .in_len_V_loc_out_din(read_input_U0_in_len_V_loc_out_din),
    .in_len_V_loc_out_full_n(in_len_V_loc_c7_full_n),
    .in_len_V_loc_out_write(read_input_U0_in_len_V_loc_out_write),
    .inStream_in_din(read_input_U0_inStream_in_din),
    .inStream_in_full_n(inStream_in_full_n),
    .inStream_in_write(read_input_U0_inStream_in_write)
);

krnl_LZW_compute_LZW compute_LZW_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(compute_LZW_U0_ap_start),
    .ap_done(compute_LZW_U0_ap_done),
    .ap_continue(compute_LZW_U0_ap_continue),
    .ap_idle(compute_LZW_U0_ap_idle),
    .ap_ready(compute_LZW_U0_ap_ready),
    .m_axi_aximm3_AWVALID(compute_LZW_U0_m_axi_aximm3_AWVALID),
    .m_axi_aximm3_AWREADY(aximm3_AWREADY),
    .m_axi_aximm3_AWADDR(compute_LZW_U0_m_axi_aximm3_AWADDR),
    .m_axi_aximm3_AWID(compute_LZW_U0_m_axi_aximm3_AWID),
    .m_axi_aximm3_AWLEN(compute_LZW_U0_m_axi_aximm3_AWLEN),
    .m_axi_aximm3_AWSIZE(compute_LZW_U0_m_axi_aximm3_AWSIZE),
    .m_axi_aximm3_AWBURST(compute_LZW_U0_m_axi_aximm3_AWBURST),
    .m_axi_aximm3_AWLOCK(compute_LZW_U0_m_axi_aximm3_AWLOCK),
    .m_axi_aximm3_AWCACHE(compute_LZW_U0_m_axi_aximm3_AWCACHE),
    .m_axi_aximm3_AWPROT(compute_LZW_U0_m_axi_aximm3_AWPROT),
    .m_axi_aximm3_AWQOS(compute_LZW_U0_m_axi_aximm3_AWQOS),
    .m_axi_aximm3_AWREGION(compute_LZW_U0_m_axi_aximm3_AWREGION),
    .m_axi_aximm3_AWUSER(compute_LZW_U0_m_axi_aximm3_AWUSER),
    .m_axi_aximm3_WVALID(compute_LZW_U0_m_axi_aximm3_WVALID),
    .m_axi_aximm3_WREADY(aximm3_WREADY),
    .m_axi_aximm3_WDATA(compute_LZW_U0_m_axi_aximm3_WDATA),
    .m_axi_aximm3_WSTRB(compute_LZW_U0_m_axi_aximm3_WSTRB),
    .m_axi_aximm3_WLAST(compute_LZW_U0_m_axi_aximm3_WLAST),
    .m_axi_aximm3_WID(compute_LZW_U0_m_axi_aximm3_WID),
    .m_axi_aximm3_WUSER(compute_LZW_U0_m_axi_aximm3_WUSER),
    .m_axi_aximm3_ARVALID(compute_LZW_U0_m_axi_aximm3_ARVALID),
    .m_axi_aximm3_ARREADY(1'b0),
    .m_axi_aximm3_ARADDR(compute_LZW_U0_m_axi_aximm3_ARADDR),
    .m_axi_aximm3_ARID(compute_LZW_U0_m_axi_aximm3_ARID),
    .m_axi_aximm3_ARLEN(compute_LZW_U0_m_axi_aximm3_ARLEN),
    .m_axi_aximm3_ARSIZE(compute_LZW_U0_m_axi_aximm3_ARSIZE),
    .m_axi_aximm3_ARBURST(compute_LZW_U0_m_axi_aximm3_ARBURST),
    .m_axi_aximm3_ARLOCK(compute_LZW_U0_m_axi_aximm3_ARLOCK),
    .m_axi_aximm3_ARCACHE(compute_LZW_U0_m_axi_aximm3_ARCACHE),
    .m_axi_aximm3_ARPROT(compute_LZW_U0_m_axi_aximm3_ARPROT),
    .m_axi_aximm3_ARQOS(compute_LZW_U0_m_axi_aximm3_ARQOS),
    .m_axi_aximm3_ARREGION(compute_LZW_U0_m_axi_aximm3_ARREGION),
    .m_axi_aximm3_ARUSER(compute_LZW_U0_m_axi_aximm3_ARUSER),
    .m_axi_aximm3_RVALID(1'b0),
    .m_axi_aximm3_RREADY(compute_LZW_U0_m_axi_aximm3_RREADY),
    .m_axi_aximm3_RDATA(32'd0),
    .m_axi_aximm3_RLAST(1'b0),
    .m_axi_aximm3_RID(1'd0),
    .m_axi_aximm3_RUSER(1'd0),
    .m_axi_aximm3_RRESP(2'd0),
    .m_axi_aximm3_BVALID(aximm3_BVALID),
    .m_axi_aximm3_BREADY(compute_LZW_U0_m_axi_aximm3_BREADY),
    .m_axi_aximm3_BRESP(aximm3_BRESP),
    .m_axi_aximm3_BID(aximm3_BID),
    .m_axi_aximm3_BUSER(aximm3_BUSER),
    .m_axi_aximm4_AWVALID(compute_LZW_U0_m_axi_aximm4_AWVALID),
    .m_axi_aximm4_AWREADY(aximm4_AWREADY),
    .m_axi_aximm4_AWADDR(compute_LZW_U0_m_axi_aximm4_AWADDR),
    .m_axi_aximm4_AWID(compute_LZW_U0_m_axi_aximm4_AWID),
    .m_axi_aximm4_AWLEN(compute_LZW_U0_m_axi_aximm4_AWLEN),
    .m_axi_aximm4_AWSIZE(compute_LZW_U0_m_axi_aximm4_AWSIZE),
    .m_axi_aximm4_AWBURST(compute_LZW_U0_m_axi_aximm4_AWBURST),
    .m_axi_aximm4_AWLOCK(compute_LZW_U0_m_axi_aximm4_AWLOCK),
    .m_axi_aximm4_AWCACHE(compute_LZW_U0_m_axi_aximm4_AWCACHE),
    .m_axi_aximm4_AWPROT(compute_LZW_U0_m_axi_aximm4_AWPROT),
    .m_axi_aximm4_AWQOS(compute_LZW_U0_m_axi_aximm4_AWQOS),
    .m_axi_aximm4_AWREGION(compute_LZW_U0_m_axi_aximm4_AWREGION),
    .m_axi_aximm4_AWUSER(compute_LZW_U0_m_axi_aximm4_AWUSER),
    .m_axi_aximm4_WVALID(compute_LZW_U0_m_axi_aximm4_WVALID),
    .m_axi_aximm4_WREADY(aximm4_WREADY),
    .m_axi_aximm4_WDATA(compute_LZW_U0_m_axi_aximm4_WDATA),
    .m_axi_aximm4_WSTRB(compute_LZW_U0_m_axi_aximm4_WSTRB),
    .m_axi_aximm4_WLAST(compute_LZW_U0_m_axi_aximm4_WLAST),
    .m_axi_aximm4_WID(compute_LZW_U0_m_axi_aximm4_WID),
    .m_axi_aximm4_WUSER(compute_LZW_U0_m_axi_aximm4_WUSER),
    .m_axi_aximm4_ARVALID(compute_LZW_U0_m_axi_aximm4_ARVALID),
    .m_axi_aximm4_ARREADY(1'b0),
    .m_axi_aximm4_ARADDR(compute_LZW_U0_m_axi_aximm4_ARADDR),
    .m_axi_aximm4_ARID(compute_LZW_U0_m_axi_aximm4_ARID),
    .m_axi_aximm4_ARLEN(compute_LZW_U0_m_axi_aximm4_ARLEN),
    .m_axi_aximm4_ARSIZE(compute_LZW_U0_m_axi_aximm4_ARSIZE),
    .m_axi_aximm4_ARBURST(compute_LZW_U0_m_axi_aximm4_ARBURST),
    .m_axi_aximm4_ARLOCK(compute_LZW_U0_m_axi_aximm4_ARLOCK),
    .m_axi_aximm4_ARCACHE(compute_LZW_U0_m_axi_aximm4_ARCACHE),
    .m_axi_aximm4_ARPROT(compute_LZW_U0_m_axi_aximm4_ARPROT),
    .m_axi_aximm4_ARQOS(compute_LZW_U0_m_axi_aximm4_ARQOS),
    .m_axi_aximm4_ARREGION(compute_LZW_U0_m_axi_aximm4_ARREGION),
    .m_axi_aximm4_ARUSER(compute_LZW_U0_m_axi_aximm4_ARUSER),
    .m_axi_aximm4_RVALID(1'b0),
    .m_axi_aximm4_RREADY(compute_LZW_U0_m_axi_aximm4_RREADY),
    .m_axi_aximm4_RDATA(16'd0),
    .m_axi_aximm4_RLAST(1'b0),
    .m_axi_aximm4_RID(1'd0),
    .m_axi_aximm4_RUSER(1'd0),
    .m_axi_aximm4_RRESP(2'd0),
    .m_axi_aximm4_BVALID(aximm4_BVALID),
    .m_axi_aximm4_BREADY(compute_LZW_U0_m_axi_aximm4_BREADY),
    .m_axi_aximm4_BRESP(aximm4_BRESP),
    .m_axi_aximm4_BID(aximm4_BID),
    .m_axi_aximm4_BUSER(aximm4_BUSER),
    .in_len_V_loc_dout(in_len_V_loc_c7_dout),
    .in_len_V_loc_empty_n(in_len_V_loc_c7_empty_n),
    .in_len_V_loc_read(compute_LZW_U0_in_len_V_loc_read),
    .send_data_dout(send_data_c_dout),
    .send_data_empty_n(send_data_c_empty_n),
    .send_data_read(compute_LZW_U0_send_data_read),
    .output_length_dout(output_length_c_dout),
    .output_length_empty_n(output_length_c_empty_n),
    .output_length_read(compute_LZW_U0_output_length_read),
    .inStream_in_dout(inStream_in_dout),
    .inStream_in_empty_n(inStream_in_empty_n),
    .inStream_in_read(compute_LZW_U0_inStream_in_read)
);

krnl_LZW_fifo_w13_d2_S in_len_V_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc5_U0_in_len_V_out_out_din),
    .if_full_n(in_len_V_loc_c_full_n),
    .if_write(Block_split1_proc5_U0_in_len_V_out_out_write),
    .if_dout(in_len_V_loc_c_dout),
    .if_empty_n(in_len_V_loc_c_empty_n),
    .if_read(read_input_U0_in_len_V_loc_read)
);

krnl_LZW_fifo_w64_d2_S in_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc5_U0_in_out_din),
    .if_full_n(in_c_full_n),
    .if_write(Block_split1_proc5_U0_in_out_write),
    .if_dout(in_c_dout),
    .if_empty_n(in_c_empty_n),
    .if_read(read_input_U0_in_r_read)
);

krnl_LZW_fifo_w64_d3_S send_data_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc5_U0_send_data_out_din),
    .if_full_n(send_data_c_full_n),
    .if_write(Block_split1_proc5_U0_send_data_out_write),
    .if_dout(send_data_c_dout),
    .if_empty_n(send_data_c_empty_n),
    .if_read(compute_LZW_U0_send_data_read)
);

krnl_LZW_fifo_w64_d3_S output_length_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc5_U0_output_length_out_din),
    .if_full_n(output_length_c_full_n),
    .if_write(Block_split1_proc5_U0_output_length_out_write),
    .if_dout(output_length_c_dout),
    .if_empty_n(output_length_c_empty_n),
    .if_read(compute_LZW_U0_output_length_read)
);

krnl_LZW_fifo_w13_d2_S in_len_V_loc_c7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_input_U0_in_len_V_loc_out_din),
    .if_full_n(in_len_V_loc_c7_full_n),
    .if_write(read_input_U0_in_len_V_loc_out_write),
    .if_dout(in_len_V_loc_c7_dout),
    .if_empty_n(in_len_V_loc_c7_empty_n),
    .if_read(compute_LZW_U0_in_len_V_loc_read)
);

krnl_LZW_fifo_w8_d2_S inStream_in_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_input_U0_inStream_in_din),
    .if_full_n(inStream_in_full_n),
    .if_write(read_input_U0_inStream_in_write),
    .if_dout(inStream_in_dout),
    .if_empty_n(inStream_in_empty_n),
    .if_read(compute_LZW_U0_inStream_in_read)
);

krnl_LZW_start_for_compute_LZW_U0 start_for_compute_LZW_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compute_LZW_U0_din),
    .if_full_n(start_for_compute_LZW_U0_full_n),
    .if_write(Block_split1_proc5_U0_start_write),
    .if_dout(start_for_compute_LZW_U0_dout),
    .if_empty_n(start_for_compute_LZW_U0_empty_n),
    .if_read(compute_LZW_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_split1_proc5_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_split1_proc5_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_split1_proc5_U0_ap_ready <= ap_sync_Block_split1_proc5_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_input_U0_ap_ready <= ap_sync_read_input_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

assign Block_split1_proc5_U0_ap_continue = 1'b1;

assign Block_split1_proc5_U0_ap_start = ((ap_sync_reg_Block_split1_proc5_U0_ap_ready ^ 1'b1) & ap_start);

assign ap_done = compute_LZW_U0_ap_done;

assign ap_idle = (read_input_U0_ap_idle & compute_LZW_U0_ap_idle & Block_split1_proc5_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_Block_split1_proc5_U0_ap_ready = (ap_sync_reg_Block_split1_proc5_U0_ap_ready | Block_split1_proc5_U0_ap_ready);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = compute_LZW_U0_ap_done;

assign ap_sync_read_input_U0_ap_ready = (read_input_U0_ap_ready | ap_sync_reg_read_input_U0_ap_ready);

assign ap_sync_ready = (ap_sync_read_input_U0_ap_ready & ap_sync_Block_split1_proc5_U0_ap_ready);

assign compute_LZW_U0_ap_continue = ap_continue;

assign compute_LZW_U0_ap_start = start_for_compute_LZW_U0_empty_n;

assign compute_LZW_U0_start_full_n = 1'b1;

assign compute_LZW_U0_start_write = 1'b0;

assign read_input_U0_ap_continue = 1'b1;

assign read_input_U0_ap_start = ((ap_sync_reg_read_input_U0_ap_ready ^ 1'b1) & ap_start);

assign read_input_U0_start_full_n = 1'b1;

assign read_input_U0_start_write = 1'b0;

assign start_for_compute_LZW_U0_din = 1'b1;

endmodule //krnl_LZW
